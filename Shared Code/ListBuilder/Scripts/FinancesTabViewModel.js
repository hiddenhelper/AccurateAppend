var AccurateAppend;
(function (AccurateAppend) {
    var ListBuilder;
    (function (ListBuilder) {
        var FinancesTabViewModel = (function () {
            function FinancesTabViewModel() {
                this.initializeDonatesToSection("#donatesToBody");
                this.initializeOccupationGeneralSection("#occupationBody");
                this.initializeOccupationDetailedSection("#occupationDetailedBody");
                this.initializeEducationSection("#educationBody");
                this.initializeEstIncomeSection("#estimatedIncomeBody");
                this.initializeNetWorthSection("#netWorthBody");
                this.initializeHomeValueSection("#homeValueBody");
                this.initializeHomeownerSection("#homeOwnerBody");
                this.initializeLengthOfResidenceSection("#lengthOfResidenceBody");
                this.initializeInvestingSection("#investingBody");
                this.initializeBusinessOwnerSection("#businessOwner");
                this.initializeAgeRangeMaleSection("#ageRangeMaleBody");
                this.initializeAgeRangeFemaleSection("#ageRangeFemaleBody");
            }
            FinancesTabViewModel.prototype.initializeDonatesToSection = function (selector) {
                var inputs = this.getDonatesTo();
                var cols = 3;
                var elementsPerColumn = Math.ceil(inputs.length / cols) + 1;
                for (var col = 0; col < cols; col++) {
                    var div = $('<div class="col-md-4"></div>');
                    $.each(inputs, function (i, v) {
                        if (col === 0 && (i >= elementsPerColumn))
                            return true;
                        if (col === 1 && (i < elementsPerColumn || i >= elementsPerColumn * 2))
                            return true;
                        if (col === 2 && (i < (elementsPerColumn * 2) || i >= elementsPerColumn * 3))
                            return true;
                        div.append("<div class=\"checkbox\"><label><input type='checkbox' name='donates' id='" + v.id + "' value='" + ko.toJSON(v) + "' data-bind='click: function (data, event) { listCriteriaViewModel.toggle(event); return true; }' />&nbsp;" + v.label + "</label></div>");
                    });
                    $(selector).append(div);
                }
            };
            FinancesTabViewModel.prototype.initializeOccupationGeneralSection = function (selector) {
                var inputs = this.getOccupation();
                var cols = 3;
                var elementsPerColumn = Math.ceil(inputs.length / cols) + 1;
                for (var col = 0; col < cols; col++) {
                    var div = $('<div class="col-md-4"></div>');
                    $.each(inputs, function (i, v) {
                        if (col === 0 && (i >= elementsPerColumn))
                            return true;
                        if (col === 1 && (i < elementsPerColumn || i >= elementsPerColumn * 2))
                            return true;
                        if (col === 2 && (i < (elementsPerColumn * 2) || i >= elementsPerColumn * 3))
                            return true;
                        div.append("<div class=\"checkbox\"><label><input type='checkbox' name='occupationGeneral' id='" + v.id + "' value='" + ko.toJSON(v) + "' data-bind='click: function (data, event) { listCriteriaViewModel.toggle(event); return true; }' />&nbsp;" + v.label + "</label></div>");
                    });
                    $(selector).append(div);
                }
            };
            FinancesTabViewModel.prototype.initializeOccupationDetailedSection = function (selector) {
                var inputs = this.getOccupationDetailed();
                var cols = 3;
                var elementsPerColumn = Math.ceil(inputs.length / cols) + 1;
                for (var col = 0; col < cols; col++) {
                    var div = $('<div class="col-md-4"></div>');
                    $.each(inputs, function (i, v) {
                        if (col === 0 && (i >= elementsPerColumn))
                            return true;
                        if (col === 1 && (i < elementsPerColumn || i >= elementsPerColumn * 2))
                            return true;
                        if (col === 2 && (i < (elementsPerColumn * 2) || i >= elementsPerColumn * 3))
                            return true;
                        div.append("<div class=\"checkbox\"><label><input type='checkbox' name='occupationDetailed' id='" + v.id + "' value='" + ko.toJSON(v) + "' data-bind='click: function (data, event) { listCriteriaViewModel.toggle(event); return true; }' />&nbsp;" + v.label + "</label></div>");
                    });
                    $(selector).append(div);
                }
            };
            FinancesTabViewModel.prototype.initializeEducationSection = function (selector) {
                var inputs = this.getEducation();
                var div = $(selector);
                $.each(inputs, function (i, v) {
                    div.append("<div class=\"checkbox\"><label><input type='checkbox' name='education' id='" + v.id + "' value='" + ko.toJSON(v) + "' data-bind='click: function (data, event) { listCriteriaViewModel.toggle(event); return true; }' />&nbsp;" + v.label + "</label></div>");
                    $(selector).append(div);
                });
            };
            FinancesTabViewModel.prototype.initializeEstIncomeSection = function (selector) {
                var inputs = this.getEstIncome();
                var cols = 2;
                var elementsPerColumn = Math.ceil(inputs.length / cols) + 1;
                for (var col = 0; col < cols; col++) {
                    var div = $('<div class="col-md-4"></div>');
                    $.each(inputs, function (i, v) {
                        if (col === 0 && (i >= elementsPerColumn))
                            return true;
                        if (col === 1 && (i < elementsPerColumn || i >= elementsPerColumn * 2))
                            return true;
                        div.append("<div class=\"checkbox\"><label><input type='checkbox' name='estIncome' id='" + v.id + "' value='" + ko.toJSON(v) + "' data-bind='click: function (data, event) { listCriteriaViewModel.toggle(event); return true; }' />&nbsp;" + v.label + "</label></div>");
                    });
                    $(selector).append(div);
                }
            };
            FinancesTabViewModel.prototype.initializeNetWorthSection = function (selector) {
                var inputs = this.getNetWorth();
                var cols = 2;
                var elementsPerColumn = Math.ceil(inputs.length / cols) + 1;
                for (var col = 0; col < cols; col++) {
                    var div = $('<div class="col-md-4"></div>');
                    $.each(inputs, function (i, v) {
                        if (col === 0 && (i >= elementsPerColumn))
                            return true;
                        if (col === 1 && (i < elementsPerColumn || i >= elementsPerColumn * 2))
                            return true;
                        div.append("<div class=\"checkbox\"><label><input type='checkbox' name='netWorth' id='" + v.id + "' value='" + ko.toJSON(v) + "' data-bind='click: function (data, event) { listCriteriaViewModel.toggle(event); return true; }' />&nbsp;" + v.label + "</label></div>");
                    });
                    $(selector).append(div);
                }
            };
            FinancesTabViewModel.prototype.initializeHomeValueSection = function (selector) {
                var inputs = this.getHomeValue();
                var cols = 2;
                var elementsPerColumn = Math.ceil(inputs.length / cols) + 1;
                for (var col = 0; col < cols; col++) {
                    var div = $('<div class="col-md-4"></div>');
                    $.each(inputs, function (i, v) {
                        if (col === 0 && (i >= elementsPerColumn))
                            return true;
                        if (col === 1 && (i < elementsPerColumn || i >= elementsPerColumn * 2))
                            return true;
                        div.append("<div class=\"checkbox\"><label><input type='checkbox' name='homeValue' id='" + v.id + "' value='" + ko.toJSON(v) + "' data-bind='click: function (data, event) { listCriteriaViewModel.toggle(event); return true; }' />&nbsp;" + v.label + "</label></div>");
                    });
                    $(selector).append(div);
                }
            };
            FinancesTabViewModel.prototype.initializeHomeownerSection = function (selector) {
                var inputs = this.getHomeowner();
                var div = $(selector);
                $.each(inputs, function (i, v) {
                    div.append("<label class=\"checkbox-inline\"><input type='checkbox' name='ownRent' id='" + v.id + "' value='" + ko.toJSON(v) + "' data-bind='click: function (data, event) { listCriteriaViewModel.toggle(event); return true; }' />&nbsp;" + v.label + "</label>");
                    $(selector).append(div);
                });
            };
            FinancesTabViewModel.prototype.initializeLengthOfResidenceSection = function (selector) {
                var inputs = this.getLengthOfResidence();
                var cols = 2;
                var elementsPerColumn = Math.ceil(inputs.length / cols) + 1;
                for (var col = 0; col < cols; col++) {
                    var div = $('<div class="col-md-2"></div>');
                    $.each(inputs, function (i, v) {
                        if (col === 0 && (i >= elementsPerColumn))
                            return true;
                        if (col === 1 && (i < elementsPerColumn || i >= elementsPerColumn * 2))
                            return true;
                        div.append("<div class=\"checkbox\"><label><input type='checkbox' name='lengthOfResidence' id='" + v.id + "' value='" + ko.toJSON(v) + "' data-bind='click: function (data, event) { listCriteriaViewModel.toggle(event); return true; }' />&nbsp;" + v.label + "</label></div>");
                    });
                    $(selector).append(div);
                }
            };
            FinancesTabViewModel.prototype.initializeInvestingSection = function (selector) {
                var inputs = this.getInvestments();
                var cols = 2;
                var elementsPerColumn = Math.ceil(inputs.length / cols) + 1;
                for (var col = 0; col < cols; col++) {
                    var div = $('<div class="col-md-5"></div>');
                    $.each(inputs, function (i, v) {
                        if (col === 0 && (i >= elementsPerColumn))
                            return true;
                        if (col === 1 && (i < elementsPerColumn || i >= elementsPerColumn * 2))
                            return true;
                        div.append("<div class=\"checkbox\"><label><input type='checkbox' name='investments' id='" + v.id + "' value='" + ko.toJSON(v) + "' data-bind='click: function (data, event) { listCriteriaViewModel.toggle(event); return true; }' />&nbsp;" + v.label + "</label></div>");
                    });
                    $(selector).append(div);
                }
            };
            FinancesTabViewModel.prototype.initializeBusinessOwnerSection = function (selector) {
                var inputs = this.getBusinessOwner();
                var cols = 2;
                var elementsPerColumn = Math.ceil(inputs.length / cols) + 1;
                for (var col = 0; col < cols; col++) {
                    var div = $('<div class="col-md-3"></div>');
                    $.each(inputs, function (i, v) {
                        if (col === 0 && (i >= elementsPerColumn))
                            return true;
                        if (col === 1 && (i < elementsPerColumn || i >= elementsPerColumn * 2))
                            return true;
                        div.append("<div class=\"checkbox\"><label><input type='checkbox' name='businessOwner' id='" + v.id + "' value='" + ko.toJSON(v) + "' data-bind='click: function (data, event) { listCriteriaViewModel.toggle(event); return true; }' />&nbsp;" + v.label + "</label></div>");
                    });
                    $(selector).append(div);
                }
            };
            FinancesTabViewModel.prototype.initializeAgeRangeMaleSection = function (selector) {
                var inputs = this.getAgeRangesMale();
                var div = $(selector);
                $.each(inputs, function (i, v) {
                    div.append("<label class=\"checkbox-inline\"><input type='checkbox' name='ageRangesMale' id='" + v.id + "' value='" + ko.toJSON(v) + "' data-bind='click: function (data, event) { listCriteriaViewModel.toggle(event); return true; }' />&nbsp;" + v.label + "</label>");
                    $(selector).append(div);
                });
            };
            FinancesTabViewModel.prototype.initializeAgeRangeFemaleSection = function (selector) {
                var inputs = this.getAgeRangesFemale();
                var div = $(selector);
                $.each(inputs, function (i, v) {
                    div.append("<label class=\"checkbox-inline\"><input type='checkbox' name='ageRangesFemale' id='" + v.id + "' value='" + ko.toJSON(v) + "' data-bind='click: function (data, event) { listCriteriaViewModel.toggle(event); return true; }' />&nbsp;" + v.label + "</label>");
                    $(selector).append(div);
                });
            };
            FinancesTabViewModel.prototype.getDonatesTo = function () {
                return [
                    new ListBuilder.ValueLabel("donationsContributions", "Contributions"),
                    new ListBuilder.ValueLabel("donationsMailOrder", "Mail Order"),
                    new ListBuilder.ValueLabel("donatestoCharitableCauses", "Charitable Causes"),
                    new ListBuilder.ValueLabel("donatestoAnimalWelfare", "Animal Welfare"),
                    new ListBuilder.ValueLabel("donatestoArtsCultural", "Arts Cultural"),
                    new ListBuilder.ValueLabel("donatestoChildrens", "Childrens"),
                    new ListBuilder.ValueLabel("donatestoEnvironmentWildlife", "Environment Wildlife"),
                    new ListBuilder.ValueLabel("donatestoHealth", "Health"),
                    new ListBuilder.ValueLabel("donatestoInternationalAid", "InternationalAid"),
                    new ListBuilder.ValueLabel("donatestoPolitical", "Political"),
                    new ListBuilder.ValueLabel("donatestoPoliticalConservative", "Political Conservative"),
                    new ListBuilder.ValueLabel("donatestoPoliticalLiberal", "Political Liberal"),
                    new ListBuilder.ValueLabel("donatestoReligious", "Religious"),
                    new ListBuilder.ValueLabel("donatestoVeterans", "Veterans"),
                    new ListBuilder.ValueLabel("donatestoOther", "Other"),
                    new ListBuilder.ValueLabel("donatestoCommunityCharities", "Community Charities"),
                    new ListBuilder.ValueLabel("donatestoPolitics", "Politics"),
                    new ListBuilder.ValueLabel("donatestoCommunityInvolvement", "Community Involvement"),
                    new ListBuilder.ValueLabel("donatestoEnvironmentalIssues", "Environmental Issues"),
                    new ListBuilder.ValueLabel("donatestoPoliticalCharity", "Political Charity"),
                    new ListBuilder.ValueLabel("donatestoCommunityCharity", "Community Charity")
                ];
            };
            FinancesTabViewModel.prototype.getOccupation = function () {
                return [
                    new ListBuilder.ValueLabel("A", "Professional / Technical"),
                    new ListBuilder.ValueLabel("B", "Administration / Managerial"),
                    new ListBuilder.ValueLabel("C", "Sales / Service"),
                    new ListBuilder.ValueLabel("D", "Clerical / White Collar"),
                    new ListBuilder.ValueLabel("E", "Craftsman / Blue Collar"),
                    new ListBuilder.ValueLabel("F", "Student"),
                    new ListBuilder.ValueLabel("G", "Homemaker"),
                    new ListBuilder.ValueLabel("H", "Retired"),
                    new ListBuilder.ValueLabel("I", "Farmer"),
                    new ListBuilder.ValueLabel("J", "Military"),
                    new ListBuilder.ValueLabel("K", "Religious"),
                    new ListBuilder.ValueLabel("L", "Self Employed"),
                    new ListBuilder.ValueLabel("M", "Self Employed - Professional / Technical"),
                    new ListBuilder.ValueLabel("N", "Self Employed - Administration / Managerial"),
                    new ListBuilder.ValueLabel("P", "Self Employed - Clerical / White Collar"),
                    new ListBuilder.ValueLabel("Q", "Self Employed - Craftsman / Blue Collar"),
                    new ListBuilder.ValueLabel("V", "Educator"),
                    new ListBuilder.ValueLabel("W", "Financial Professional"),
                    new ListBuilder.ValueLabel("X", "Legal Professional"),
                    new ListBuilder.ValueLabel("Y", "Medical Professional"),
                    new ListBuilder.ValueLabel("Z", "Other"),
                    new ListBuilder.ValueLabel("", "Unknown")
                ];
            };
            FinancesTabViewModel.prototype.getOccupationDetailed = function () {
                return [
                    new ListBuilder.ValueLabel("T999", "Professional"),
                    new ListBuilder.ValueLabel("T998", "Architect"),
                    new ListBuilder.ValueLabel("T997", "Chemist"),
                    new ListBuilder.ValueLabel("T996", "Curator"),
                    new ListBuilder.ValueLabel("T995", "Engineer"),
                    new ListBuilder.ValueLabel("T994", "Engineer/Aerospace"),
                    new ListBuilder.ValueLabel("T993", "Engineer/Chemical"),
                    new ListBuilder.ValueLabel("T992", "Engineer/Civil"),
                    new ListBuilder.ValueLabel("T991", "Engineer/Electrical/Electronic"),
                    new ListBuilder.ValueLabel("T990", "Engineer/Field"),
                    new ListBuilder.ValueLabel("T989", "Engineer/Industrial"),
                    new ListBuilder.ValueLabel("T988", "Engineer/Mechanical"),
                    new ListBuilder.ValueLabel("T987", "Geologist"),
                    new ListBuilder.ValueLabel("T986", "Home Economist"),
                    new ListBuilder.ValueLabel("T985", "Legal/Attorney/Lawyer"),
                    new ListBuilder.ValueLabel("T984", "Librarian/Archivist"),
                    new ListBuilder.ValueLabel("T983", "Medical Doctor/Physician"),
                    new ListBuilder.ValueLabel("T982", "Pastor"),
                    new ListBuilder.ValueLabel("T981", "Pilot"),
                    new ListBuilder.ValueLabel("T980", "Scientist"),
                    new ListBuilder.ValueLabel("T979", "Statistician/Actuary"),
                    new ListBuilder.ValueLabel("T978", "Veterinarian"),
                    new ListBuilder.ValueLabel("T899", "Computer"),
                    new ListBuilder.ValueLabel("T898", "Computer Operator"),
                    new ListBuilder.ValueLabel("T897", "Computer Programmer"),
                    new ListBuilder.ValueLabel("T896", "Computer/Systems Analyst"),
                    new ListBuilder.ValueLabel("E799", "Executive/Upper Management"),
                    new ListBuilder.ValueLabel("E798", "CEO/CFO/Chairman/Corp Officer"),
                    new ListBuilder.ValueLabel("E797", "Comptroller"),
                    new ListBuilder.ValueLabel("E796", "Politician/Legislator/Diplomat"),
                    new ListBuilder.ValueLabel("E795", "President"),
                    new ListBuilder.ValueLabel("E794", "Treasurer"),
                    new ListBuilder.ValueLabel("E793", "Vice President"),
                    new ListBuilder.ValueLabel("M699", "Middle Management"),
                    new ListBuilder.ValueLabel("M698", "Account Executive"),
                    new ListBuilder.ValueLabel("M697", "Director/Art Director"),
                    new ListBuilder.ValueLabel("M696", "Director/Executive Director"),
                    new ListBuilder.ValueLabel("M695", "Editor"),
                    new ListBuilder.ValueLabel("M694", "Manager"),
                    new ListBuilder.ValueLabel("M693", "Manager/Assistant Manager"),
                    new ListBuilder.ValueLabel("M692", "Manager/Branch Manager"),
                    new ListBuilder.ValueLabel("M691", "Manager/Credit Manager"),
                    new ListBuilder.ValueLabel("M690", "Manager/District Manager"),
                    new ListBuilder.ValueLabel("M689", "Manager/Division Manager"),
                    new ListBuilder.ValueLabel("M688", "Manger/General Manager"),
                    new ListBuilder.ValueLabel("M687", "Manager/Marketing Manager"),
                    new ListBuilder.ValueLabel("M686", "Manager/Office Manager"),
                    new ListBuilder.ValueLabel("M685", "Manager/Plant Manager"),
                    new ListBuilder.ValueLabel("M684", "Manager/Product Manager"),
                    new ListBuilder.ValueLabel("M683", "Manager/Project Manager"),
                    new ListBuilder.ValueLabel("M682", "Manager/Property Manager"),
                    new ListBuilder.ValueLabel("M681", "Manager/Regional Manager"),
                    new ListBuilder.ValueLabel("M680", "Manager/Sales Manager"),
                    new ListBuilder.ValueLabel("M679", "Manager/Store Manager"),
                    new ListBuilder.ValueLabel("M678", "Manager/Traffic Manager"),
                    new ListBuilder.ValueLabel("M677", "Manager/Warehouse Manager"),
                    new ListBuilder.ValueLabel("M676", "Planner"),
                    new ListBuilder.ValueLabel("M675", "Principal/Dean/Educator"),
                    new ListBuilder.ValueLabel("M674", "Superintendent"),
                    new ListBuilder.ValueLabel("M673", "Supervisor"),
                    new ListBuilder.ValueLabel("W599", "White Collar Worker"),
                    new ListBuilder.ValueLabel("W598", "Accounting/Biller/Billing clerk"),
                    new ListBuilder.ValueLabel("W597", "Actor/Entertainer/Announcer"),
                    new ListBuilder.ValueLabel("W596", "Adjuster"),
                    new ListBuilder.ValueLabel("W595", "Administration/Management"),
                    new ListBuilder.ValueLabel("W594", "Advertising"),
                    new ListBuilder.ValueLabel("W593", "Agent"),
                    new ListBuilder.ValueLabel("W592", "Aide/Assistant"),
                    new ListBuilder.ValueLabel("W591", "Aide/Assistant/Executive"),
                    new ListBuilder.ValueLabel("W590", "Aide/Assistant/Office"),
                    new ListBuilder.ValueLabel("W589", "Aide/Assistant/School"),
                    new ListBuilder.ValueLabel("W588", "Aide/Assistant/Staff"),
                    new ListBuilder.ValueLabel("W587", "Aide/Assistant/Technical"),
                    new ListBuilder.ValueLabel("W586", "Analyst"),
                    new ListBuilder.ValueLabel("W585", "Appraiser"),
                    new ListBuilder.ValueLabel("W584", "Artist"),
                    new ListBuilder.ValueLabel("W583", "Auctioneer"),
                    new ListBuilder.ValueLabel("W582", "Auditor"),
                    new ListBuilder.ValueLabel("W581", "Banker"),
                    new ListBuilder.ValueLabel("W580", "Banker/Loan Office"),
                    new ListBuilder.ValueLabel("W579", "Banker/Loan Processor"),
                    new ListBuilder.ValueLabel("W578", "Bookkeeper"),
                    new ListBuilder.ValueLabel("W577", "Broker"),
                    new ListBuilder.ValueLabel("W576", "Broker/Stock/Trader"),
                    new ListBuilder.ValueLabel("W575", "Buyer"),
                    new ListBuilder.ValueLabel("W574", "Cashier"),
                    new ListBuilder.ValueLabel("W573", "Caterer"),
                    new ListBuilder.ValueLabel("W572", "Checker"),
                    new ListBuilder.ValueLabel("W571", "Claims Examiner/Rep/Adjudicator"),
                    new ListBuilder.ValueLabel("W570", "Clerk"),
                    new ListBuilder.ValueLabel("W569", "Clerk/File"),
                    new ListBuilder.ValueLabel("W568", "Collector"),
                    new ListBuilder.ValueLabel("W567", "Communications"),
                    new ListBuilder.ValueLabel("W566", "Conservation/Environment"),
                    new ListBuilder.ValueLabel("W565", "Consultant/Advisor"),
                    new ListBuilder.ValueLabel("W564", "Coordinator"),
                    new ListBuilder.ValueLabel("W563", "Customer Service/Representative"),
                    new ListBuilder.ValueLabel("W562", "Designer"),
                    new ListBuilder.ValueLabel("W561", "Detective/Investigator"),
                    new ListBuilder.ValueLabel("W560", "Dispatcher"),
                    new ListBuilder.ValueLabel("W559", "Draftsman"),
                    new ListBuilder.ValueLabel("W558", "Estimator"),
                    new ListBuilder.ValueLabel("W557", "Expeditor"),
                    new ListBuilder.ValueLabel("W556", "Finance"),
                    new ListBuilder.ValueLabel("W555", "Flight Attendant/Steward"),
                    new ListBuilder.ValueLabel("W554", "Florist"),
                    new ListBuilder.ValueLabel("W553", "Graphic Designer/Commercial Artist"),
                    new ListBuilder.ValueLabel("W552", "Hostess/Host/Usher"),
                    new ListBuilder.ValueLabel("W551", "Insurance/Agent"),
                    new ListBuilder.ValueLabel("W550", "Insurance/Underwriter"),
                    new ListBuilder.ValueLabel("W549", "Interior Designer"),
                    new ListBuilder.ValueLabel("W548", "Jeweler"),
                    new ListBuilder.ValueLabel("W547", "Marketing"),
                    new ListBuilder.ValueLabel("W546", "Merchandiser"),
                    new ListBuilder.ValueLabel("W545", "Model"),
                    new ListBuilder.ValueLabel("W544", "Musician/Music/Dance"),
                    new ListBuilder.ValueLabel("W543", "Personnel/Recruiter/Interviewer"),
                    new ListBuilder.ValueLabel("W542", "Photography"),
                    new ListBuilder.ValueLabel("W541", "Public Relations"),
                    new ListBuilder.ValueLabel("W540", "Publishing"),
                    new ListBuilder.ValueLabel("W539", "Purchasing"),
                    new ListBuilder.ValueLabel("W538", "Quality Control"),
                    new ListBuilder.ValueLabel("W537", "Real Estate/Realtor"),
                    new ListBuilder.ValueLabel("W536", "Receptionist"),
                    new ListBuilder.ValueLabel("W535", "Reporter"),
                    new ListBuilder.ValueLabel("W534", "Researcher"),
                    new ListBuilder.ValueLabel("W533", "Sales"),
                    new ListBuilder.ValueLabel("W532", "Sales Clerk/Counterman"),
                    new ListBuilder.ValueLabel("W531", "Security"),
                    new ListBuilder.ValueLabel("W530", "Surveyor"),
                    new ListBuilder.ValueLabel("W529", "Technician"),
                    new ListBuilder.ValueLabel("W528", "Telemarketer/Telephone/Operator"),
                    new ListBuilder.ValueLabel("W527", "Teller/Bank Teller"),
                    new ListBuilder.ValueLabel("W526", "Tester"),
                    new ListBuilder.ValueLabel("W525", "Transcripter/Translator"),
                    new ListBuilder.ValueLabel("W524", "Travel Agent"),
                    new ListBuilder.ValueLabel("W523", "Union Member/Rep."),
                    new ListBuilder.ValueLabel("W522", "Ward Clerk"),
                    new ListBuilder.ValueLabel("W521", "Water Treatment"),
                    new ListBuilder.ValueLabel("W520", "Writer"),
                    new ListBuilder.ValueLabel("L499", "Blue Collar Worker"),
                    new ListBuilder.ValueLabel("L498", "Animal Technician/Groomer"),
                    new ListBuilder.ValueLabel("L497", "Apprentice"),
                    new ListBuilder.ValueLabel("L496", "Assembler"),
                    new ListBuilder.ValueLabel("L495", "Athlete/Professional"),
                    new ListBuilder.ValueLabel("L494", "Attendant"),
                    new ListBuilder.ValueLabel("L493", "Auto Mechanic"),
                    new ListBuilder.ValueLabel("L492", "Baker"),
                    new ListBuilder.ValueLabel("L491", "Barber/Hairstylist/Beautician"),
                    new ListBuilder.ValueLabel("L490", "Bartender"),
                    new ListBuilder.ValueLabel("L489", "Binder"),
                    new ListBuilder.ValueLabel("L488", "Bodyman"),
                    new ListBuilder.ValueLabel("L487", "Brakeman"),
                    new ListBuilder.ValueLabel("L486", "Brewer"),
                    new ListBuilder.ValueLabel("L485", "Butcher/Meat Cutter"),
                    new ListBuilder.ValueLabel("L484", "Carpenter/Furniture/Woodworking"),
                    new ListBuilder.ValueLabel("L483", "Chef/Butler"),
                    new ListBuilder.ValueLabel("L482", "Child Care/Day Care/Babysitter"),
                    new ListBuilder.ValueLabel("L481", "Cleaner/Laundry"),
                    new ListBuilder.ValueLabel("L480", "Clerk/Deli"),
                    new ListBuilder.ValueLabel("L479", "Clerk/Produce"),
                    new ListBuilder.ValueLabel("L478", "Clerk/Stock"),
                    new ListBuilder.ValueLabel("L477", "Conductor"),
                    new ListBuilder.ValueLabel("L476", "Construction"),
                    new ListBuilder.ValueLabel("L475", "Cook"),
                    new ListBuilder.ValueLabel("L474", "Cosmetologist"),
                    new ListBuilder.ValueLabel("L473", "Courier/Delivery/Messenger"),
                    new ListBuilder.ValueLabel("L472", "Crewman"),
                    new ListBuilder.ValueLabel("L471", "Custodian"),
                    new ListBuilder.ValueLabel("L470", "Cutter"),
                    new ListBuilder.ValueLabel("L469", "Dock Worker"),
                    new ListBuilder.ValueLabel("L468", "Driver"),
                    new ListBuilder.ValueLabel("L467", "Driver/Bus Driver"),
                    new ListBuilder.ValueLabel("L466", "Driver/Truck Driver"),
                    new ListBuilder.ValueLabel("L465", "Electrician"),
                    new ListBuilder.ValueLabel("L464", "Fabricator"),
                    new ListBuilder.ValueLabel("L463", "Factory Workman"),
                    new ListBuilder.ValueLabel("L462", "Farmer/Dairyman"),
                    new ListBuilder.ValueLabel("L461", "Finisher"),
                    new ListBuilder.ValueLabel("L460", "Fisherman/Seaman"),
                    new ListBuilder.ValueLabel("L459", "Fitter"),
                    new ListBuilder.ValueLabel("L458", "Food Service"),
                    new ListBuilder.ValueLabel("L457", "Foreman/Crew leader"),
                    new ListBuilder.ValueLabel("L456", "Foreman/Shop Foreman"),
                    new ListBuilder.ValueLabel("L455", "Forestry"),
                    new ListBuilder.ValueLabel("L454", "Foundry Worker"),
                    new ListBuilder.ValueLabel("L453", "Furrier"),
                    new ListBuilder.ValueLabel("L452", "Gardener/Landscaper"),
                    new ListBuilder.ValueLabel("L451", "Glazier"),
                    new ListBuilder.ValueLabel("L450", "Grinder"),
                    new ListBuilder.ValueLabel("L449", "Grocer"),
                    new ListBuilder.ValueLabel("L448", "Helper"),
                    new ListBuilder.ValueLabel("L447", "Housekeeper/Maid"),
                    new ListBuilder.ValueLabel("L446", "Inspector"),
                    new ListBuilder.ValueLabel("L445", "Installer"),
                    new ListBuilder.ValueLabel("L444", "Ironworker"),
                    new ListBuilder.ValueLabel("L443", "Janitor"),
                    new ListBuilder.ValueLabel("L442", "Journeyman"),
                    new ListBuilder.ValueLabel("L441", "Laborer"),
                    new ListBuilder.ValueLabel("L440", "Lineman"),
                    new ListBuilder.ValueLabel("L439", "Lithographer"),
                    new ListBuilder.ValueLabel("L438", "Loader"),
                    new ListBuilder.ValueLabel("L437", "Locksmith"),
                    new ListBuilder.ValueLabel("L436", "Machinist"),
                    new ListBuilder.ValueLabel("L435", "Maintenance"),
                    new ListBuilder.ValueLabel("L434", "Maintenance/Supervisor"),
                    new ListBuilder.ValueLabel("L433", "Mason/Brick/Etc."),
                    new ListBuilder.ValueLabel("L432", "Material Handler"),
                    new ListBuilder.ValueLabel("L431", "Mechanic"),
                    new ListBuilder.ValueLabel("L430", "Meter Reader"),
                    new ListBuilder.ValueLabel("L429", "Mill worker"),
                    new ListBuilder.ValueLabel("L428", "Millwright"),
                    new ListBuilder.ValueLabel("L427", "Miner"),
                    new ListBuilder.ValueLabel("L426", "Mold Maker/Molder/Injection Mold"),
                    new ListBuilder.ValueLabel("L425", "Oil Industry/Driller"),
                    new ListBuilder.ValueLabel("L424", "Operator"),
                    new ListBuilder.ValueLabel("L423", "Operator/Boilermaker"),
                    new ListBuilder.ValueLabel("L422", "Operator/Crane Operator"),
                    new ListBuilder.ValueLabel("L421", "Operator/Forklift Operator"),
                    new ListBuilder.ValueLabel("L420", "Operator/Machine Operator"),
                    new ListBuilder.ValueLabel("L419", "Packer"),
                    new ListBuilder.ValueLabel("L418", "Painter"),
                    new ListBuilder.ValueLabel("L417", "Parts (Auto Etc.)"),
                    new ListBuilder.ValueLabel("L416", "Pipe fitter"),
                    new ListBuilder.ValueLabel("L415", "Plumber"),
                    new ListBuilder.ValueLabel("L414", "Polisher"),
                    new ListBuilder.ValueLabel("L413", "Porter"),
                    new ListBuilder.ValueLabel("L412", "Press Operator"),
                    new ListBuilder.ValueLabel("L411", "Presser"),
                    new ListBuilder.ValueLabel("L410", "Printer"),
                    new ListBuilder.ValueLabel("L409", "Production"),
                    new ListBuilder.ValueLabel("L408", "Repairman"),
                    new ListBuilder.ValueLabel("L407", "Roofer"),
                    new ListBuilder.ValueLabel("L406", "Sanitation/Exterminator"),
                    new ListBuilder.ValueLabel("L405", "Seamstress/Tailor/Handicraft"),
                    new ListBuilder.ValueLabel("L404", "Setup man"),
                    new ListBuilder.ValueLabel("L403", "Sheet Metal Worker/Steel Worker"),
                    new ListBuilder.ValueLabel("L402", "Shipping/Import/Export/Custom"),
                    new ListBuilder.ValueLabel("L401", "Sorter"),
                    new ListBuilder.ValueLabel("L400", "Toolmaker"),
                    new ListBuilder.ValueLabel("L399", "Transportation"),
                    new ListBuilder.ValueLabel("L398", "Typesetter"),
                    new ListBuilder.ValueLabel("L397", "Upholstery"),
                    new ListBuilder.ValueLabel("L396", "Utility"),
                    new ListBuilder.ValueLabel("L395", "Waiter/Waitress"),
                    new ListBuilder.ValueLabel("L394", "Welder"),
                    new ListBuilder.ValueLabel("H349", "Health Services"),
                    new ListBuilder.ValueLabel("H348", "Chiropractor"),
                    new ListBuilder.ValueLabel("H347", "Dental Assistant"),
                    new ListBuilder.ValueLabel("H346", "Dental Hygienist"),
                    new ListBuilder.ValueLabel("H345", "Dentist"),
                    new ListBuilder.ValueLabel("H344", "Dietician"),
                    new ListBuilder.ValueLabel("H343", "Health Care"),
                    new ListBuilder.ValueLabel("H342", "Medical Assistant"),
                    new ListBuilder.ValueLabel("H341", "Medical Secretary"),
                    new ListBuilder.ValueLabel("H340", "Medical Technician"),
                    new ListBuilder.ValueLabel("H339", "Medical/Paramedic"),
                    new ListBuilder.ValueLabel("H338", "Nurses Aide/Orderly"),
                    new ListBuilder.ValueLabel("H337", "Optician"),
                    new ListBuilder.ValueLabel("H336", "Optometrist"),
                    new ListBuilder.ValueLabel("H335", "Pharmacist/Pharmacy"),
                    new ListBuilder.ValueLabel("H334", "Psychologist"),
                    new ListBuilder.ValueLabel("H333", "Technician/Lab"),
                    new ListBuilder.ValueLabel("H332", "Technician/X-ray"),
                    new ListBuilder.ValueLabel("H331", "Therapist"),
                    new ListBuilder.ValueLabel("H330", "Therapists/Physical"),
                    new ListBuilder.ValueLabel("H329", "Nurse"),
                    new ListBuilder.ValueLabel("H328", "Nurse (Registered)"),
                    new ListBuilder.ValueLabel("H327", "Nurse/LPN"),
                    new ListBuilder.ValueLabel("H326", "Social Worker/Case Worker"),
                    new ListBuilder.ValueLabel("S299", "Legal/Paralegal/Assistant"),
                    new ListBuilder.ValueLabel("S298", "Legal Secretary"),
                    new ListBuilder.ValueLabel("S297", "Secretary"),
                    new ListBuilder.ValueLabel("S296", "Typist"),
                    new ListBuilder.ValueLabel("S295", "Data Entry/Key Punch"),
                    new ListBuilder.ValueLabel("P249", "Homemaker"),
                    new ListBuilder.ValueLabel("P248", "Retired"),
                    new ListBuilder.ValueLabel("P247", "Retired/Pensioner"),
                    new ListBuilder.ValueLabel("P246", "Part Time"),
                    new ListBuilder.ValueLabel("P245", "Student"),
                    new ListBuilder.ValueLabel("P244", "Volunteer"),
                    new ListBuilder.ValueLabel("A199", "Armed Forces"),
                    new ListBuilder.ValueLabel("A198", "Army Credit Union Trades"),
                    new ListBuilder.ValueLabel("A197", "Navy Credit Union Trades"),
                    new ListBuilder.ValueLabel("A196", "Air Force"),
                    new ListBuilder.ValueLabel("A195", "National Guard"),
                    new ListBuilder.ValueLabel("A194", "Coast Guard"),
                    new ListBuilder.ValueLabel("A193", "Marines"),
                    new ListBuilder.ValueLabel("I149", "Coach"),
                    new ListBuilder.ValueLabel("I148", "Counselor"),
                    new ListBuilder.ValueLabel("I147", "Instructor"),
                    new ListBuilder.ValueLabel("I146", "Lecturer"),
                    new ListBuilder.ValueLabel("I145", "Professor"),
                    new ListBuilder.ValueLabel("I144", "Teacher"),
                    new ListBuilder.ValueLabel("I143", "Trainer"),
                    new ListBuilder.ValueLabel("C129", "Civil Service"),
                    new ListBuilder.ValueLabel("C128", "Air Traffic Control"),
                    new ListBuilder.ValueLabel("C127", "Civil Service/Government"),
                    new ListBuilder.ValueLabel("C126", "Corrections/Probation/Parole"),
                    new ListBuilder.ValueLabel("C125", "Court Reporter"),
                    new ListBuilder.ValueLabel("C124", "Firefighter"),
                    new ListBuilder.ValueLabel("C123", "Judge/Referee"),
                    new ListBuilder.ValueLabel("C122", "Mail Carrier/Postal"),
                    new ListBuilder.ValueLabel("C121", "Mail/Postmaster"),
                    new ListBuilder.ValueLabel("C120", "Police/Trooper"),
                ];
            };
            FinancesTabViewModel.prototype.getEducation = function () {
                return [
                    new ListBuilder.ValueLabel("A", "Completed High School"),
                    new ListBuilder.ValueLabel("B", "Completed College"),
                    new ListBuilder.ValueLabel("C", "Completed Graduate School"),
                    new ListBuilder.ValueLabel("D", "Attended Vocational/Technical"),
                    new ListBuilder.ValueLabel("", "Unknown")
                ];
            };
            FinancesTabViewModel.prototype.getEstIncome = function () {
                return [
                    new ListBuilder.ValueLabel("A", "Under $10,000"),
                    new ListBuilder.ValueLabel("B", "$10,000 - $14,999"),
                    new ListBuilder.ValueLabel("C", "$15,000 - $19,999"),
                    new ListBuilder.ValueLabel("D", "$20,000 - $24,999"),
                    new ListBuilder.ValueLabel("E", "$25,000 - $29,999"),
                    new ListBuilder.ValueLabel("F", "$30,000 - $34,999"),
                    new ListBuilder.ValueLabel("G", "$35,000 - $39,999"),
                    new ListBuilder.ValueLabel("H", "$40,000 - $44,999"),
                    new ListBuilder.ValueLabel("I", "$45,000 - $49,999"),
                    new ListBuilder.ValueLabel("J", "$50,000 - $54,999"),
                    new ListBuilder.ValueLabel("K", "$55,000 - $59,999"),
                    new ListBuilder.ValueLabel("L", "$60,000 - $64,999"),
                    new ListBuilder.ValueLabel("M", "$65,000 - $74,999"),
                    new ListBuilder.ValueLabel("N", "$75,000 - $99,999"),
                    new ListBuilder.ValueLabel("O", "$100,000 - $149,999"),
                    new ListBuilder.ValueLabel("P", "$150,000 - $174,999"),
                    new ListBuilder.ValueLabel("Q", "$175,000 - $199,999"),
                    new ListBuilder.ValueLabel("R", "$200,000 - $249,999"),
                    new ListBuilder.ValueLabel("S", "$250,000 +")
                ];
            };
            FinancesTabViewModel.prototype.getNetWorth = function () {
                return [
                    new ListBuilder.ValueLabel("A", "Less than $1"),
                    new ListBuilder.ValueLabel("B", "$1 - $4,999"),
                    new ListBuilder.ValueLabel("C", "$5,000 - $9,999"),
                    new ListBuilder.ValueLabel("D", "$10,000 - $24,999"),
                    new ListBuilder.ValueLabel("E", "$25,000 - $49,999"),
                    new ListBuilder.ValueLabel("F", "$50,000 - $99,999"),
                    new ListBuilder.ValueLabel("G", "$100,000 - $249,999"),
                    new ListBuilder.ValueLabel("H", "$250,000 - $499,999"),
                    new ListBuilder.ValueLabel("I", "Greater than $499,999")
                ];
            };
            FinancesTabViewModel.prototype.getHomeValue = function () {
                return [
                    new ListBuilder.ValueLabel("A", "$1,000 - $24,999"),
                    new ListBuilder.ValueLabel("B", "$25,000 - $49,999"),
                    new ListBuilder.ValueLabel("C", "$50,000 - $74,999"),
                    new ListBuilder.ValueLabel("D", "$75,000 - $99,999"),
                    new ListBuilder.ValueLabel("E", "$100,000 - $124,999"),
                    new ListBuilder.ValueLabel("F", "$125,000 - $149,999"),
                    new ListBuilder.ValueLabel("G", "$150,000 - $174,999"),
                    new ListBuilder.ValueLabel("H", "$175,000 - $199,999"),
                    new ListBuilder.ValueLabel("I", "$200,000 - $224,999"),
                    new ListBuilder.ValueLabel("J", "$225,000 - $249,999"),
                    new ListBuilder.ValueLabel("K", "$250,000 - $274,999"),
                    new ListBuilder.ValueLabel("L", "$275,000 - $299,999"),
                    new ListBuilder.ValueLabel("M", "$300,000 - $349,999"),
                    new ListBuilder.ValueLabel("N", "$350,000 - $399,999"),
                    new ListBuilder.ValueLabel("O", "$400,000 - $449,999"),
                    new ListBuilder.ValueLabel("P", "$450,000 - $499,999"),
                    new ListBuilder.ValueLabel("Q", "$500,000 - $749,999"),
                    new ListBuilder.ValueLabel("R", "$750,000 - $999,999"),
                    new ListBuilder.ValueLabel("S", "$1,000,000 Plus")
                ];
            };
            FinancesTabViewModel.prototype.getHomeowner = function () {
                return [
                    new ListBuilder.ValueLabel("H", "Homeowner"),
                    new ListBuilder.ValueLabel("R", "Renter"),
                    new ListBuilder.ValueLabel("", "Unknown")
                ];
            };
            FinancesTabViewModel.prototype.getLengthOfResidence = function () {
                return [
                    new ListBuilder.ValueLabel("1", "1 Year"),
                    new ListBuilder.ValueLabel("2", "2 Years"),
                    new ListBuilder.ValueLabel("3", "3 Years"),
                    new ListBuilder.ValueLabel("4", "4 Years"),
                    new ListBuilder.ValueLabel("5", "5 Years"),
                    new ListBuilder.ValueLabel("6", "6 Years"),
                    new ListBuilder.ValueLabel("7", "7 Years"),
                    new ListBuilder.ValueLabel("8", "8 Years"),
                    new ListBuilder.ValueLabel("9", "9 Years"),
                    new ListBuilder.ValueLabel("10", "10 Years"),
                    new ListBuilder.ValueLabel("11", "11 Years"),
                    new ListBuilder.ValueLabel("12", "12 Years"),
                    new ListBuilder.ValueLabel("13", "13 Years"),
                    new ListBuilder.ValueLabel("14", "14 Years"),
                    new ListBuilder.ValueLabel("15", "15 Years")
                ];
            };
            FinancesTabViewModel.prototype.getHouseholdSize = function () {
                return [
                    new ListBuilder.ValueLabel("1", "1 people"),
                    new ListBuilder.ValueLabel("2", "2 people"),
                    new ListBuilder.ValueLabel("3", "3 people"),
                    new ListBuilder.ValueLabel("4", "4 people"),
                    new ListBuilder.ValueLabel("5", "5 people"),
                    new ListBuilder.ValueLabel("6", "6 people"),
                    new ListBuilder.ValueLabel("7", "7 people"),
                    new ListBuilder.ValueLabel("8", "8 people"),
                    new ListBuilder.ValueLabel("9", "9 people")
                ];
            };
            FinancesTabViewModel.prototype.getNumberOfAdults = function () {
                return [
                    new ListBuilder.ValueLabel("1", "1 adult"),
                    new ListBuilder.ValueLabel("2", "2 adults"),
                    new ListBuilder.ValueLabel("3", "3 adults"),
                    new ListBuilder.ValueLabel("4", "4 adults"),
                    new ListBuilder.ValueLabel("5", "5 adults"),
                    new ListBuilder.ValueLabel("6", "6 adults")
                ];
            };
            FinancesTabViewModel.prototype.getInvestments = function () {
                return [
                    new ListBuilder.ValueLabel("investmentsActive", "Active Investments"),
                    new ListBuilder.ValueLabel("investmentsForeign", "Foreign Investments"),
                    new ListBuilder.ValueLabel("investingActive", "Active Investor"),
                    new ListBuilder.ValueLabel("investmentsPersonal", "Personal Investor"),
                    new ListBuilder.ValueLabel("investmentsRealEstate", "Real Estate Investor"),
                    new ListBuilder.ValueLabel("investmentsStocksBonds", "Stocks Bonds Investor")
                ];
            };
            FinancesTabViewModel.prototype.getBusinessOwner = function () {
                return [
                    new ListBuilder.ValueLabel("1", "Accountant"),
                    new ListBuilder.ValueLabel("2", "Builder"),
                    new ListBuilder.ValueLabel("3", "Contractor"),
                    new ListBuilder.ValueLabel("4", "Dealer/Retailer/Storekeeper"),
                    new ListBuilder.ValueLabel("5", "Distributor/Wholesaler"),
                    new ListBuilder.ValueLabel("6", "Funeral Director"),
                    new ListBuilder.ValueLabel("7", "Maker/Manufacturer"),
                    new ListBuilder.ValueLabel("8", "Owner"),
                    new ListBuilder.ValueLabel("9", "Partner"),
                    new ListBuilder.ValueLabel("A", "Self-Employed")
                ];
            };
            FinancesTabViewModel.prototype.getEstimatedResidentialPropertiesOwned = function () {
                return [
                    new ListBuilder.ValueLabel("0", "0"),
                    new ListBuilder.ValueLabel("1", "1"),
                    new ListBuilder.ValueLabel("2", "2"),
                    new ListBuilder.ValueLabel("3", "3"),
                    new ListBuilder.ValueLabel("4", "4"),
                    new ListBuilder.ValueLabel("5", "5"),
                    new ListBuilder.ValueLabel("5", "6")
                ];
            };
            FinancesTabViewModel.prototype.gettEstimatedResidentialPropertiesOwned = function () {
                return [
                    new ListBuilder.ValueLabel("investmentEstimatedResidentialPropertiesOwned", "Estimated Residential Properties Owned")
                ];
            };
            FinancesTabViewModel.prototype.getAgeRangesMale = function () {
                return [
                    new ListBuilder.ValueLabel("HouseHoldHasMales18to24", "18-24"),
                    new ListBuilder.ValueLabel("HouseHoldHasMales25to34", "25-34"),
                    new ListBuilder.ValueLabel("HouseHoldHasMales35to44", "35-44"),
                    new ListBuilder.ValueLabel("HouseHoldHasMales45to54", "45-54"),
                    new ListBuilder.ValueLabel("HouseHoldHasMales55to64", "55-64"),
                    new ListBuilder.ValueLabel("HouseHoldHasMales65to74", "65-74"),
                    new ListBuilder.ValueLabel("HouseHoldHasMales75plus", "75+")
                ];
            };
            FinancesTabViewModel.prototype.getAgeRangesFemale = function () {
                return [
                    new ListBuilder.ValueLabel("HouseHoldHasFemales18to24", "18-24"),
                    new ListBuilder.ValueLabel("HouseHoldHasFemales25to34", "25-34"),
                    new ListBuilder.ValueLabel("HouseHoldHasFemales35to44", "35-44"),
                    new ListBuilder.ValueLabel("HouseHoldHasFemales45to54", "45-54"),
                    new ListBuilder.ValueLabel("HouseHoldHasFemales55to64", "55-64"),
                    new ListBuilder.ValueLabel("HouseHoldHasFemales65to74", "65-74"),
                    new ListBuilder.ValueLabel("HouseHoldHasFemales75plus", "75+")
                ];
            };
            return FinancesTabViewModel;
        }());
        ListBuilder.FinancesTabViewModel = FinancesTabViewModel;
    })(ListBuilder = AccurateAppend.ListBuilder || (AccurateAppend.ListBuilder = {}));
})(AccurateAppend || (AccurateAppend = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmluYW5jZXNUYWJWaWV3TW9kZWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJGaW5hbmNlc1RhYlZpZXdNb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFPLGNBQWMsQ0FrMkJwQjtBQWwyQkQsV0FBTyxjQUFjO0lBQUMsSUFBQSxXQUFXLENBazJCaEM7SUFsMkJxQixXQUFBLFdBQVc7UUFFL0I7WUFFRTtnQkFDRSxJQUFJLENBQUMsMEJBQTBCLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztnQkFDbEQsSUFBSSxDQUFDLGtDQUFrQyxDQUFDLGlCQUFpQixDQUFDLENBQUM7Z0JBQzNELElBQUksQ0FBQyxtQ0FBbUMsQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO2dCQUNwRSxJQUFJLENBQUMsMEJBQTBCLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztnQkFDbEQsSUFBSSxDQUFDLDBCQUEwQixDQUFDLHNCQUFzQixDQUFDLENBQUM7Z0JBQ3hELElBQUksQ0FBQyx5QkFBeUIsQ0FBQyxlQUFlLENBQUMsQ0FBQztnQkFDaEQsSUFBSSxDQUFDLDBCQUEwQixDQUFDLGdCQUFnQixDQUFDLENBQUM7Z0JBQ2xELElBQUksQ0FBQywwQkFBMEIsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO2dCQUNsRCxJQUFJLENBQUMsa0NBQWtDLENBQUMsd0JBQXdCLENBQUMsQ0FBQztnQkFDbEUsSUFBSSxDQUFDLDBCQUEwQixDQUFDLGdCQUFnQixDQUFDLENBQUM7Z0JBQ2xELElBQUksQ0FBQyw4QkFBOEIsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO2dCQUN0RCxJQUFJLENBQUMsNkJBQTZCLENBQUMsbUJBQW1CLENBQUMsQ0FBQztnQkFDeEQsSUFBSSxDQUFDLCtCQUErQixDQUFDLHFCQUFxQixDQUFDLENBQUM7WUFDOUQsQ0FBQztZQUVELHlEQUEwQixHQUExQixVQUEyQixRQUFRO2dCQUVqQyxJQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7Z0JB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QUFNLEVBQUUsMkJBQTJCLENBQUM7b0JBQy9ELElBQUksV0FBVyxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsd0JBQXdCLENBQUM7b0JBQzVELElBQUksV0FBVyxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsd0JBQXdCLENBQUM7b0JBQzVELElBQUksV0FBVyxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsMEJBQTBCLENBQUM7b0JBQzlELElBQUksV0FBVyxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsMEJBQTBCLENBQUM7b0JBQzlELElBQUksV0FBVyxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsd0JBQXdCLENBQUM7b0JBQzVELElBQUksV0FBVyxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsMkJBQTJCLENBQUM7b0JBQy9ELElBQUksV0FBVyxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsd0JBQXdCLENBQUM7b0JBQzVELElBQUksV0FBVyxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsdUJBQXVCLENBQUM7b0JBQzNELElBQUksV0FBVyxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUseUJBQXlCLENBQUM7b0JBQzdELElBQUksV0FBVyxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUseUJBQXlCLENBQUM7b0JBQzdELElBQUksV0FBVyxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsMEJBQTBCLENBQUM7b0JBQzlELElBQUksV0FBVyxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsMEJBQTBCLENBQUM7b0JBQzlELElBQUksV0FBVyxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsdUJBQXVCLENBQUM7b0JBQzNELElBQUksV0FBVyxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsdUJBQXVCLENBQUM7b0JBQzNELElBQUksV0FBVyxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUseUJBQXlCLENBQUM7b0JBQzdELElBQUksV0FBVyxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsMkJBQTJCLENBQUM7b0JBQy9ELElBQUksV0FB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TztvQkFDTCxJQUFJLFdBQVcsQ0FBQyxVQUFVLENBQUMsR0FBRyxFQUFFLGVBQWUsQ0FBQztvQkFDaEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxtQkFBbUIsQ0FBQztvQkFDcEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxtQkFBbUIsQ0FBQztvQkFDcEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxtQkFBbUIsQ0FBQztvQkFDcEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxtQkFBbUIsQ0FBQztvQkFDcEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxtQkFBbUIsQ0FBQztvQkFDcEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxtQkFBbUIsQ0FBQztvQkFDcEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxtQkFBbUIsQ0FBQztvQkFDcEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxtQkFBbUIsQ0FBQztvQkFDcEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxtQkFBbUIsQ0FBQztvQkFDcEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxtQkFBbUIsQ0FBQztvQkFDcEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxtQkFBbUIsQ0FBQztvQkFDcEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxtQkFBbUIsQ0FBQztvQkFDcEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxtQkFBbUIsQ0FBQztvQkFDcEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxxQkFBcUIsQ0FBQztvQkFDdEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxxQkFBcUIsQ0FBQztvQkFDdEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxxQkFBcUIsQ0FBQztvQkFDdEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxxQkFBcUIsQ0FBQztvQkFDdEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxZQUFZLENBQUM7aUJBQzlDLENBQUM7WUFDSixDQUFDO1lBRUQsMENBQVcsR0FBWDtnQkFDRSxPQUFPO29CQUNMLElBQUksV0FBVyxDQUFDLFVBQVUsQ0FBQyxHQUFHLEVBQUUsY0FBYyxDQUFDO29CQUMvQyxJQUFJLFdBQVcsQ0FBQyxVQUFVLENBQUMsR0FBRyxFQUFFLGFBQWEsQ0FBQztvQkFDOUMsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxpQkFBaUIsQ0FBQztvQkFDbEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxtQkFBbUIsQ0FBQztvQkFDcEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxtQkFBbUIsQ0FBQztvQkFDcEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxtQkFBbUIsQ0FBQztvQkFDcEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxxQkFBcUIsQ0FBQztvQkFDdEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxxQkFBcUIsQ0FBQztvQkFDdEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSx1QkFBdUIsQ0FBQztpQkFDekQsQ0FBQztZQUNKLENBQUM7WUFFRCwyQ0FBWSxHQUFaO2dCQUNFLE9BQU87b0JBQ0wsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxrQkFBa0IsQ0FBQztvQkFDbkQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxtQkFBbUIsQ0FBQztvQkFDcEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxtQkFBbUIsQ0FBQztvQkFDcEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxtQkFBbUIsQ0FBQztvQkFDcEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxxQkFBcUIsQ0FBQztvQkFDdEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxxQkFBcUIsQ0FBQztvQkFDdEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxxQkFBcUIsQ0FBQztvQkFDdEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxxQkFBcUIsQ0FBQztvQkFDdEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxxQkFBcUIsQ0FBQztvQkFDdEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxxQkFBcUIsQ0FBQztvQkFDdEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxxQkFBcUIsQ0FBQztvQkFDdEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxxQkFBcUIsQ0FBQztvQkFDdEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxxQkFBcUIsQ0FBQztvQkFDdEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxxQkFBcUIsQ0FBQztvQkFDdEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxxQkFBcUIsQ0FBQztvQkFDdEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxxQkFBcUIsQ0FBQztvQkFDdEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxxQkFBcUIsQ0FBQztvQkFDdEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxxQkFBcUIsQ0FBQztvQkFDdEQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxpQkFBaUIsQ0FBQztpQkFDbkQsQ0FBQztZQUNKLENBQUM7WUFFRCwyQ0FBWSxHQUFaO2dCQUNFLE9BQU87b0JBQ0wsSUFBSSxXQUFXLENBQUMsVUFB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SSxXQUFXLENBQUMsVUFBVSxDQUFDLHlCQUF5QixFQUFFLE9BQU8sQ0FBQztvQkFDOUQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLHlCQUF5QixFQUFFLE9BQU8sQ0FBQztvQkFDOUQsSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLHlCQUF5QixFQUFFLEtBQUssQ0FBQztpQkFDN0QsQ0FBQztZQUNKLENBQUM7WUFFRCxpREFBa0IsR0FBbEI7Z0JBQ0UsT0FBTztvQkFDTCxJQUFJLFdBQVcsQ0FBQyxVQUFVLENBQUMsMkJBQTJCLEVBQUUsT0FBTyxDQUFDO29CQUNoRSxJQUFJLFdBQVcsQ0FBQyxVQUFVLENBQUMsMkJBQTJCLEVBQUUsT0FBTyxDQUFDO29CQUNoRSxJQUFJLFdBQVcsQ0FBQyxVQUFVLENBQUMsMkJBQTJCLEVBQUUsT0FBTyxDQUFDO29CQUNoRSxJQUFJLFdBQVcsQ0FBQyxVQUFVLENBQUMsMkJBQTJCLEVBQUUsT0FBTyxDQUFDO29CQUNoRSxJQUFJLFdBQVcsQ0FBQyxVQUFVLENBQUMsMkJBQTJCLEVBQUUsT0FBTyxDQUFDO29CQUNoRSxJQUFJLFdBQVcsQ0FBQyxVQUFVLENBQUMsMkJBQTJCLEVBQUUsT0FBTyxDQUFDO29CQUNoRSxJQUFJLFdBQVcsQ0FBQyxVQUFVLENBQUMsMkJBQTJCLEVBQUUsS0FBSyxDQUFDO2lCQUMvRCxDQUFDO1lBQ0osQ0FBQztZQUVILDJCQUFDO1FBQUQsQ0FBQyxBQTkxQkQsSUE4MUJDO1FBOTFCWSxnQ0FBb0IsdUJBODFCaEMsQ0FBQTtJQUVILENBQUMsRUFsMkJxQixXQUFXLEdBQVgsMEJBQVcsS0FBWCwwQkFBVyxRQWsyQmhDO0FBQUQsQ0FBQyxFQWwyQk0sY0FBYyxLQUFkLGNBQWMsUUFrMkJwQiIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZSBBY2N1cmF0ZUFwcGVuZC5MaXN0QnVpbGRlciB7XHJcblxyXG4gIGV4cG9ydCBjbGFzcyBGaW5hbmNlc1RhYlZpZXdNb2RlbCB7XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgIHRoaXMuaW5pdGlhbGl6ZURvbmF0ZXNUb1NlY3Rpb24oXCIjZG9uYXRlc1RvQm9keVwiKTtcclxuICAgICAgdGhpcy5pbml0aWFsaXplT2NjdXBhdGlvbkdlbmVyYWxTZWN0aW9uKFwiI29jY3VwYXRpb25Cb2R5XCIpO1xyXG4gICAgICB0aGlzLmluaXRpYWxpemVPY2N1cGF0aW9uRGV0YWlsZWRTZWN0aW9uKFwiI29jY3VwYXRpb25EZXRhaWxlZEJvZHlcIik7XHJcbiAgICAgIHRoaXMuaW5pdGlhbGl6ZUVkdWNhdGlvblNlY3Rpb24oXCIjZWR1Y2F0aW9uQm9keVwiKTtcclxuICAgICAgdGhpcy5pbml0aWFsaXplRXN0SW5jb21lU2VjdGlvbihcIiNlc3RpbWF0ZWRJbmNvbWVCb2R5XCIpO1xyXG4gICAgICB0aGlzLmluaXRpYWxpemVOZXRXb3J0aFNlY3Rpb24oXCIjbmV0V29ydGhCb2R5XCIpO1xyXG4gICAgICB0aGlzLmluaXRpYWxpemVIb21lVmFsdWVTZWN0aW9uKFwiI2hvbWVWYWx1ZUJvZHlcIik7XHJcbiAgICAgIHRoaXMuaW5pdGlhbGl6ZUhvbWVvd25lclNlY3Rpb24oXCIjaG9tZU93bmVyQm9keVwiKTtcclxuICAgICAgdGhpcy5pbml0aWFsaXplTGVuZ3RoT2ZSZXNpZGVuY2VTZWN0aW9uKFwiI2xlbmd0aE9mUmVzaWRlbmNlQm9keVwiKTtcclxuICAgICAgdGhpcy5pbml0aWFsaXplSW52ZXN0aW5nU2VjdGlvbihcIiNpbnZlc3RpbmdCb2R5XCIpO1xyXG4gICAgICB0aGlzLmluaXRpYWxpemVCdXNpbmVzc093bmVyU2VjdGlvbihcIiNidXNpbmVzc093bmVyXCIpO1xyXG4gICAgICB0aGlzLmluaXRpYWxpemVBZ2VSYW5nZU1hbGVTZWN0aW9uKFwiI2FnZVJhbmdlTWFsZUJvZHlcIik7XHJcbiAgICAgIHRoaXMuaW5pdGlhbGl6ZUFnZVJhbmdlRmVtYWxlU2VjdGlvbihcIiNhZ2VSYW5nZUZlbWFsZUJvZHlcIik7XHJcbiAgICB9XHJcblxyXG4gICAgaW5pdGlhbGl6ZURvbmF0ZXNUb1NlY3Rpb24oc2VsZWN0b3IpIHtcclxuXHJcbiAgICAgIGNvbnN0IGlucHV0cyA9IHRoaXMuZ2V0RG9uYXRlc1RvKCk7XHJcblxyXG4gICAgICAvLyBjYW4gYmUgZW5jYXBzdWxhdGVkIGluIGEgY29tbW9uIGZ1bnRpb25cclxuICAgICAgY29uc3QgY29scyA9IDM7XHJcbiAgICAgIHZhciBlbGVtZW50c1BlckNvbHVtbiA9IE1hdGguY2VpbChpbnB1dHMubGVuZ3RoIC8gY29scykgKyAxO1xyXG4gICAgICBmb3IgKHZhciBjb2wgPSAwOyBjb2wgPCBjb2xzOyBjb2wrKykge1xyXG4gICAgICAgIHZhciBkaXYgPSAkKCc8ZGl2IGNsYXNzPVwiY29sLW1kLTRcIj48L2Rpdj4nKTtcclxuICAgICAgICAkLmVhY2goaW5wdXRzLFxyXG4gICAgICAgICAgKGksIHYpID0+IHtcclxuICAgICAgICAgICAgaWYgKGNvbCA9PT0gMCAmJiAoaSA+PSBlbGVtZW50c1BlckNvbHVtbikpIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICBpZiAoY29sID09PSAxICYmIChpIDwgZWxlbWVudHNQZXJDb2x1bW4gfHwgaSA+PSBlbGVtZW50c1BlckNvbHVtbiAqIDIpKSByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgaWYgKGNvbCA9PT0gMiAmJiAoaSA8IChlbGVtZW50c1BlckNvbHVtbiAqIDIpIHx8IGkgPj0gZWxlbWVudHNQZXJDb2x1bW4gKiAzKSkgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgIGRpdi5hcHBlbmQoXHJcbiAgICAgICAgICAgICAgYDxkaXYgY2xhc3M9XCJjaGVja2JveFwiPjxsYWJlbD48aW5wdXQgdHlwZT0nY2hlY2tib3gnIG5hbWU9J2RvbmF0ZXMnIGlkPScke3YuaWR9JyB2YWx1ZT0nJHtrby50b0pTT04odilcclxuICAgICAgICAgICAgICB9JyBkYXRhLWJpbmQ9J2NsaWNrOiBmdW5jdGlvbiAoZGF0YSwgZXZlbnQpIHsgbGlzdENyaXRlcmlhVmlld01vZGVsLnRvZ2dsZShldmVudCk7IHJldHVybiB0cnVlOyB9JyAvPiZuYnNwOyR7XHJcbiAgICAgICAgICAgICAgdi5sYWJlbH08L2xhYmVsPjwvZGl2PmApO1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgJChzZWxlY3RvcikuYXBwZW5kKGRpdik7XHJcbiAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG4gICAgaW5pdGlhbGl6ZU9jY3VwYXRpb25HZW5lcmFsU2VjdGlvbihzZWxlY3Rvcikge1xyXG5cclxuICAgICAgY29uc3QgaW5wdXRzID0gdGhpcy5nZXRPY2N1cGF0aW9uKCk7XHJcblxyXG4gICAgICAvLyBjYW4gYmUgZW5jYXBzdWxhdGVkIGluIGEgY29tbW9uIGZ1bnRpb25cclxuICAgICAgY29uc3QgY29scyA9IDM7XHJcbiAgICAgIHZhciBlbGVtZW50c1BlckNvbHVtbiA9IE1hdGguY2VpbChpbnB1dHMubGVuZ3RoIC8gY29scykgKyAxO1xyXG4gICAgICBmb3IgKHZhciBjb2wgPSAwOyBjb2wgPCBjb2xzOyBjb2wrKykge1xyXG4gICAgICAgIHZhciBkaXYgPSAkKCc8ZGl2IGNsYXNzPVwiY29sLW1kLTRcIj48L2Rpdj4nKTtcclxuICAgICAgICAkLmVhY2goaW5wdXRzLFxyXG4gICAgICAgICAgKGksIHYpID0+IHtcclxuICAgICAgICAgICAgaWYgKGNvbCA9PT0gMCAmJiAoaSA+PSBlbGVtZW50c1BlckNvbHVtbikpIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICBpZiAoY29sID09PSAxICYmIChpIDwgZWxlbWVudHNQZXJDb2x1bW4gfHwgaSA+PSBlbGVtZW50c1BlckNvbHVtbiAqIDIpKSByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgaWYgKGNvbCA9PT0gMiAmJiAoaSA8IChlbGVtZW50c1BlckNvbHVtbiAqIDIpIHx8IGkgPj0gZWxlbWVudHNQZXJDb2x1bW4gKiAzKSkgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgIGRpdi5hcHBlbmQoXHJcbiAgICAgICAgICAgICAgYDxkaXYgY2xhc3M9XCJjaGVja2JveFwiPjxsYWJlbD48aW5wdXQgdHlwZT0nY2hlY2tib3gnIG5hbWU9J29jY3VwYXRpb25HZW5lcmFsJyBpZD0nJHt2LmlkfScgdmFsdWU9JyR7XHJcbiAgICAgICAgICAgICAga28udG9KU09OKHYpXHJcbiAgICAgICAgICAgICAgfScgZGF0YS1iaW5kPSdjbGljazogZnVuY3Rpb24gKGRhdGEsIGV2ZW50KSB7IGxpc3RDcml0ZXJpYVZpZXdNb2RlbC50b2dnbGUoZXZlbnQpOyByZXR1cm4gdHJ1ZTsgfScgLz4mbmJzcDske1xyXG4gICAgICAgICAgICAgIHYubGFiZWx9PC9sYWJlbD48L2Rpdj5gKTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgICQoc2VsZWN0b3IpLmFwcGVuZChkaXYpO1xyXG4gICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxuICAgIGluaXRpYWxpemVPY2N1cGF0aW9uRGV0YWlsZWRTZWN0aW9uKHNlbGVjdG9yKSB7XHJcblxyXG4gICAgICBjb25zdCBpbnB1dHMgPSB0aGlzLmdldE9jY3VwYXRpb25EZXRhaWxlZCgpO1xyXG5cclxuICAgICAgLy8gY2FuIGJlIGVuY2Fwc3VsYXRlZCBpbiBhIGNvbW1vbiBmdW50aW9uXHJcbiAgICAgIGNvbnN0IGNvbHMgPSAzO1xyXG4gICAgICB2YXIgZWxlbWVudHNQZXJDb2x1bW4gPSBNYXRoLmNlaWwoaW5wdXRzLmxlbmd0aCAvIGNvbHMpICsgMTtcclxuICAgICAgZm9yICh2YXIgY29sID0gMDsgY29sIDwgY29sczsgY29sKyspIHtcclxuICAgICAgICB2YXIgZGl2ID0gJCgnPGRpdiBjbGFzcz1cImNvbC1tZC00XCI+PC9kaXY+Jyk7XHJcbiAgICAgICAgJC5lYWNoKGlucHV0cyxcclxuICAgICAgICAgIChpLCB2KSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChjb2wgPT09IDAgJiYgKGkgPj0gZWxlbWVudHNQZXJDb2x1bW4pKSByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgaWYgKGNvbCA9PT0gMSAmJiAoaSA8IGVsZW1lbnRzUGVyQ29sdW1uIHx8IGkgPj0gZWxlbWVudHNQZXJDb2x1bW4gKiAyKSkgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgIGlmIChjb2wgPT09IDIgJiYgKGkgPCAoZWxlbWVudHNQZXJDb2x1bW4gKiAyKSB8fCBpID49IGVsZW1lbnRzUGVyQ29sdW1uICogMykpIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICBkaXYuYXBwZW5kKFxyXG4gICAgICAgICAgICAgIGA8ZGl2IGNsYXNzPVwiY2hlY2tib3hcIj48bGFiZWw+PGlucHV0IHR5cGU9J2NoZWNrYm94JyBuYW1lPSdvY2N1cGF0aW9uRGV0YWlsZWQnIGlkPScke3YuaWR9JyB2YWx1ZT0nJHtcclxuICAgICAgICAgICAgICBrby50b0pTT04odilcclxuICAgICAgICAgICAgICB9JyBkYXRhLWJpbmQ9J2NsaWNrOiBmdW5jdGlvbiAoZGF0YSwgZXZlbnQpIHsgbGlzdENyaXRlcmlhVmlld01vZGVsLnRvZ2dsZShldmVudCk7IHJldHVybiB0cnVlOyB9JyAvPiZuYnNwOyR7XHJcbiAgICAgICAgICAgICAgdi5sYWJlbH08L2xhYmVsPjwvZGl2PmApO1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgJChzZWxlY3RvcikuYXBwZW5kKGRpdik7XHJcbiAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG4gICAgaW5pdGlhbGl6ZUVkdWNhdGlvblNlY3Rpb24oc2VsZWN0b3IpIHtcclxuXHJcbiAgICAgIGNvbnN0IGlucHV0cyA9IHRoaXMuZ2V0RWR1Y2F0aW9uKCk7XHJcblxyXG4gICAgICB2YXIgZGl2ID0gJChzZWxlY3Rvcik7XHJcbiAgICAgICQuZWFjaChpbnB1dHMsXHJcbiAgICAgICAgKGksIHYpID0+IHtcclxuICAgICAgICAgIGRpdi5hcHBlbmQoXHJcbiAgICAgICAgICAgIGA8ZGl2IGNsYXNzPVwiY2hlY2tib3hcIj48bGFiZWw+PGlucHV0IHR5cGU9J2NoZWNrYm94JyBuYW1lPSdlZHVjYXRpb24nIGlkPScke3YuaWR9JyB2YWx1ZT0nJHtrby50b0pTT04odilcclxuICAgICAgICAgICAgfScgZGF0YS1iaW5kPSdjbGljazogZnVuY3Rpb24gKGRhdGEsIGV2ZW50KSB7IGxpc3RDcml0ZXJpYVZpZXdNb2RlbC50b2dnbGUoZXZlbnQpOyByZXR1cm4gdHJ1ZTsgfScgLz4mbmJzcDske1xyXG4gICAgICAgICAgICB2LmxhYmVsfTwvbGFiZWw+PC9kaXY+YCk7XHJcbiAgICAgICAgICAkKHNlbGVjdG9yKS5hcHBlbmQoZGl2KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgaW5pdGlhbGl6ZUVzdEluY29tZVNlY3Rpb24oc2VsZWN0b3IpIHtcclxuXHJcbiAgICAgIGNvbnN0IGlucHV0cyA9IHRoaXMuZ2V0RXN0SW5jb21lKCk7XHJcblxyXG4gICAgICAvLyBjYW4gYmUgZW5jYXBzdWxhdGVkIGluIGEgY29tbW9uIGZ1bnRpb25cclxuICAgICAgY29uc3QgY29scyA9IDI7XHJcbiAgICAgIHZhciBlbGVtZW50c1BlckNvbHVtbiA9IE1hdGguY2VpbChpbnB1dHMubGVuZ3RoIC8gY29scykgKyAxO1xyXG4gICAgICBmb3IgKHZhciBjb2wgPSAwOyBjb2wgPCBjb2xzOyBjb2wrKykge1xyXG4gICAgICAgIHZhciBkaXYgPSAkKCc8ZGl2IGNsYXNzPVwiY29sLW1kLTRcIj48L2Rpdj4nKTtcclxuICAgICAgICAkLmVhY2goaW5wdXRzLFxyXG4gICAgICAgICAgKGksIHYpID0+IHtcclxuICAgICAgICAgICAgaWYgKGNvbCA9PT0gMCAmJiAoaSA+PSBlbGVtZW50c1BlckNvbHVtbikpIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICBpZiAoY29sID09PSAxICYmIChpIDwgZWxlbWVudHNQZXJDb2x1bW4gfHwgaSA+PSBlbGVtZW50c1BlckNvbHVtbiAqIDIpKSByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgZGl2LmFwcGVuZChcclxuICAgICAgICAgICAgICBgPGRpdiBjbGFzcz1cImNoZWNrYm94XCI+PGxhYmVsPjxpbnB1dCB0eXBlPSdjaGVja2JveCcgbmFtZT0nZXN0SW5jb21lJyBpZD0nJHt2LmlkfScgdmFsdWU9JyR7a28udG9KU09OKHYpXHJcbiAgICAgICAgICAgICAgfScgZGF0YS1iaW5kPSdjbGljazogZnVuY3Rpb24gKGRhdGEsIGV2ZW50KSB7IGxpc3RDcml0ZXJpYVZpZXdNb2RlbC50b2dnbGUoZXZlbnQpOyByZXR1cm4gdHJ1ZTsgfScgLz4mbmJzcDske1xyXG4gICAgICAgICAgICAgIHYubGFiZWx9PC9sYWJlbD48L2Rpdj5gKTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgICQoc2VsZWN0b3IpLmFwcGVuZChkaXYpO1xyXG4gICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxuICAgIGluaXRpYWxpemVOZXRXb3J0aFNlY3Rpb24oc2VsZWN0b3IpIHtcclxuXHJcbiAgICAgIGNvbnN0IGlucHV0cyA9IHRoaXMuZ2V0TmV0V29ydGgoKTtcclxuXHJcbiAgICAgIC8vIGNhbiBiZSBlbmNhcHN1bGF0ZWQgaW4gYSBjb21tb24gZnVudGlvblxyXG4gICAgICBjb25zdCBjb2xzID0gMjtcclxuICAgICAgdmFyIGVsZW1lbnRzUGVyQ29sdW1uID0gTWF0aC5jZWlsKGlucHV0cy5sZW5ndGggLyBjb2xzKSArIDE7XHJcbiAgICAgIGZvciAodmFyIGNvbCA9IDA7IGNvbCA8IGNvbHM7IGNvbCsrKSB7XHJcbiAgICAgICAgdmFyIGRpdiA9ICQoJzxkaXYgY2xhc3M9XCJjb2wtbWQtNFwiPjwvZGl2PicpO1xyXG4gICAgICAgICQuZWFjaChpbnB1dHMsXHJcbiAgICAgICAgICAoaSwgdikgPT4ge1xyXG4gICAgICAgICAgICBpZiAoY29sID09PSAwICYmIChpID49IGVsZW1lbnRzUGVyQ29sdW1uKSkgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgIGlmIChjb2wgPT09IDEgJiYgKGkgPCBlbGVtZW50c1BlckNvbHVtbiB8fCBpID49IGVsZW1lbnRzUGVyQ29sdW1uICogMikpIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICBkaXYuYXBwZW5kKFxyXG4gICAgICAgICAgICAgIGA8ZGl2IGNsYXNzPVwiY2hlY2tib3hcIj48bGFiZWw+PGlucHV0IHR5cGU9J2NoZWNrYm94JyBuYW1lPSduZXRXb3J0aCcgaWQ9JyR7di5pZH0nIHZhbHVlPScke2tvLnRvSlNPTih2KVxyXG4gICAgICAgICAgICAgIH0nIGRhdGEtYmluZD0nY2xpY2s6IGZ1bmN0aW9uIChkYXRhLCBldmVudCkgeyBsaXN0Q3JpdGVyaWFWaWV3TW9kZWwudG9nZ2xlKGV2ZW50KTsgcmV0dXJuIHRydWU7IH0nIC8+Jm5ic3A7JHtcclxuICAgICAgICAgICAgICB2LmxhYmVsfTwvbGFiZWw+PC9kaXY+YCk7XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICAkKHNlbGVjdG9yKS5hcHBlbmQoZGl2KTtcclxuICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcbiAgICBpbml0aWFsaXplSG9tZVZhbHVlU2VjdGlvbihzZWxlY3Rvcikge1xyXG5cclxuICAgICAgY29uc3QgaW5wdXRzID0gdGhpcy5nZXRIb21lVmFsdWUoKTtcclxuXHJcbiAgICAgIC8vIGNhbiBiZSBlbmNhcHN1bGF0ZWQgaW4gYSBjb21tb24gZnVudGlvblxyXG4gICAgICBjb25zdCBjb2xzID0gMjtcclxuICAgICAgdmFyIGVsZW1lbnRzUGVyQ29sdW1uID0gTWF0aC5jZWlsKGlucHV0cy5sZW5ndGggLyBjb2xzKSArIDE7XHJcbiAgICAgIGZvciAodmFyIGNvbCA9IDA7IGNvbCA8IGNvbHM7IGNvbCsrKSB7XHJcbiAgICAgICAgdmFyIGRpdiA9ICQoJzxkaXYgY2xhc3M9XCJjb2wtbWQtNFwiPjwvZGl2PicpO1xyXG4gICAgICAgICQuZWFjaChpbnB1dHMsXHJcbiAgICAgICAgICAoaSwgdikgPT4ge1xyXG4gICAgICAgICAgICBpZiAoY29sID09PSAwICYmIChpID49IGVsZW1lbnRzUGVyQ29sdW1uKSkgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgIGlmIChjb2wgPT09IDEgJiYgKGkgPCBlbGVtZW50c1BlckNvbHVtbiB8fCBpID49IGVsZW1lbnRzUGVyQ29sdW1uICogMikpIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICBkaXYuYXBwZW5kKFxyXG4gICAgICAgICAgICAgIGA8ZGl2IGNsYXNzPVwiY2hlY2tib3hcIj48bGFiZWw+PGlucHV0IHR5cGU9J2NoZWNrYm94JyBuYW1lPSdob21lVmFsdWUnIGlkPScke3YuaWR9JyB2YWx1ZT0nJHtrby50b0pTT04odilcclxuICAgICAgICAgICAgICB9JyBkYXRhLWJpbmQ9J2NsaWNrOiBmdW5jdGlvbiAoZGF0YSwgZXZlbnQpIHsgbGlzdENyaXRlcmlhVmlld01vZGVsLnRvZ2dsZShldmVudCk7IHJldHVybiB0cnVlOyB9JyAvPiZuYnNwOyR7XHJcbiAgICAgICAgICAgICAgdi5sYWJlbH08L2xhYmVsPjwvZGl2PmApO1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgJChzZWxlY3RvcikuYXBwZW5kKGRpdik7XHJcbiAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG4gICAgaW5pdGlhbGl6ZUhvbWVvd25lclNlY3Rpb24oc2VsZWN0b3IpIHtcclxuXHJcbiAgICAgIGNvbnN0IGlucHV0cyA9IHRoaXMuZ2V0SG9tZW93bmVyKCk7XHJcblxyXG4gICAgICB2YXIgZGl2ID0gJChzZWxlY3Rvcik7XHJcbiAgICAgICQuZWFjaChpbnB1dHMsXHJcbiAgICAgICAgKGksIHYpID0+IHtcclxuICAgICAgICAgIGRpdi5hcHBlbmQoXHJcbiAgICAgICAgICAgIGA8bGFiZWwgY2xhc3M9XCJjaGVja2JveC1pbmxpbmVcIj48aW5wdXQgdHlwZT0nY2hlY2tib3gnIG5hbWU9J293blJlbnQnIGlkPScke3YuaWR9JyB2YWx1ZT0nJHtrby50b0pTT04odilcclxuICAgICAgICAgICAgfScgZGF0YS1iaW5kPSdjbGljazogZnVuY3Rpb24gKGRhdGEsIGV2ZW50KSB7IGxpc3RDcml0ZXJpYVZpZXdNb2RlbC50b2dnbGUoZXZlbnQpOyByZXR1cm4gdHJ1ZTsgfScgLz4mbmJzcDske1xyXG4gICAgICAgICAgICB2LmxhYmVsfTwvbGFiZWw+YCk7XHJcbiAgICAgICAgICAkKHNlbGVjdG9yKS5hcHBlbmQoZGl2KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgaW5pdGlhbGl6ZUxlbmd0aE9mUmVzaWRlbmNlU2VjdGlvbihzZWxlY3Rvcikge1xyXG5cclxuICAgICAgY29uc3QgaW5wdXRzID0gdGhpcy5nZXRMZW5ndGhPZlJlc2lkZW5jZSgpO1xyXG5cclxuICAgICAgLy8gY2FuIGJlIGVuY2Fwc3VsYXRlZCBpbiBhIGNvbW1vbiBmdW50aW9uXHJcbiAgICAgIGNvbnN0IGNvbHMgPSAyO1xyXG4gICAgICB2YXIgZWxlbWVudHNQZXJDb2x1bW4gPSBNYXRoLmNlaWwoaW5wdXRzLmxlbmd0aCAvIGNvbHMpICsgMTtcclxuICAgICAgZm9yICh2YXIgY29sID0gMDsgY29sIDwgY29sczsgY29sKyspIHtcclxuICAgICAgICB2YXIgZGl2ID0gJCgnPGRpdiBjbGFzcz1cImNvbC1tZC0yXCI+PC9kaXY+Jyk7XHJcbiAgICAgICAgJC5lYWNoKGlucHV0cyxcclxuICAgICAgICAgIChpLCB2KSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChjb2wgPT09IDAgJiYgKGkgPj0gZWxlbWVudHNQZXJDb2x1bW4pKSByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgaWYgKGNvbCA9PT0gMSAmJiAoaSA8IGVsZW1lbnRzUGVyQ29sdW1uIHx8IGkgPj0gZWxlbWVudHNQZXJDb2x1bW4gKiAyKSkgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgIGRpdi5hcHBlbmQoXHJcbiAgICAgICAgICAgICAgYDxkaXYgY2xhc3M9XCJjaGVja2JveFwiPjxsYWJlbD48aW5wdXQgdHlwZT0nY2hlY2tib3gnIG5hbWU9J2xlbmd0aE9mUmVzaWRlbmNlJyBpZD0nJHt2LmlkfScgdmFsdWU9JyR7XHJcbiAgICAgICAgICAgICAga28udG9KU09OKHYpXHJcbiAgICAgICAgICAgICAgfScgZGF0YS1iaW5kPSdjbGljazogZnVuY3Rpb24gKGRhdGEsIGV2ZW50KSB7IGxpc3RDcml0ZXJpYVZpZXdNb2RlbC50b2dnbGUoZXZlbnQpOyByZXR1cm4gdHJ1ZTsgfScgLz4mbmJzcDske1xyXG4gICAgICAgICAgICAgIHYubGFiZWx9PC9sYWJlbD48L2Rpdj5gKTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgICQoc2VsZWN0b3IpLmFwcGVuZChkaXYpO1xyXG4gICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxuICAgIGluaXRpYWxpemVJbnZlc3RpbmdTZWN0aW9uKHNlbGVjdG9yKSB7XHJcblxyXG4gICAgICBjb25zdCBpbnB1dHMgPSB0aGlzLmdldEludmVzdG1lbnRzKCk7XHJcblxyXG4gICAgICAvLyBjYW4gYmUgZW5jYXBzdWxhdGVkIGluIGEgY29tbW9uIGZ1bnRpb25cclxuICAgICAgY29uc3QgY29scyA9IDI7XHJcbiAgICAgIHZhciBlbGVtZW50c1BlckNvbHVtbiA9IE1hdGguY2VpbChpbnB1dHMubGVuZ3RoIC8gY29scykgKyAxO1xyXG4gICAgICBmb3IgKHZhciBjb2wgPSAwOyBjb2wgPCBjb2xzOyBjb2wrKykge1xyXG4gICAgICAgIHZhciBkaXYgPSAkKCc8ZGl2IGNsYXNzPVwiY29sLW1kLTVcIj48L2Rpdj4nKTtcclxuICAgICAgICAkLmVhY2goaW5wdXRzLFxyXG4gICAgICAgICAgKGksIHYpID0+IHtcclxuICAgICAgICAgICAgaWYgKGNvbCA9PT0gMCAmJiAoaSA+PSBlbGVtZW50c1BlckNvbHVtbikpIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICBpZiAoY29sID09PSAxICYmIChpIDwgZWxlbWVudHNQZXJDb2x1bW4gfHwgaSA+PSBlbGVtZW50c1BlckNvbHVtbiAqIDIpKSByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgZGl2LmFwcGVuZChcclxuICAgICAgICAgICAgICBgPGRpdiBjbGFzcz1cImNoZWNrYm94XCI+PGxhYmVsPjxpbnB1dCB0eXBlPSdjaGVja2JveCcgbmFtZT0naW52ZXN0bWVudHMnIGlkPScke3YuaWR9JyB2YWx1ZT0nJHtrby50b0pTT04odilcclxuICAgICAgICAgICAgICB9JyBkYXRhLWJpbmQ9J2NsaWNrOiBmdW5jdGlvbiAoZGF0YSwgZXZlbnQpIHsgbGlzdENyaXRlcmlhVmlld01vZGVsLnRvZ2dsZShldmVudCk7IHJldHVybiB0cnVlOyB9JyAvPiZuYnNwOyR7XHJcbiAgICAgICAgICAgICAgdi5sYWJlbH08L2xhYmVsPjwvZGl2PmApO1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgJChzZWxlY3RvcikuYXBwZW5kKGRpdik7XHJcbiAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG4gICAgaW5pdGlhbGl6ZUJ1c2luZXNzT3duZXJTZWN0aW9uKHNlbGVjdG9yKSB7XHJcblxyXG4gICAgICBjb25zdCBpbnB1dHMgPSB0aGlzLmdldEJ1c2luZXNzT3duZXIoKTtcclxuXHJcbiAgICAgIC8vIGNhbiBiZSBlbmNhcHN1bGF0ZWQgaW4gYSBjb21tb24gZnVudGlvblxyXG4gICAgICBjb25zdCBjb2xzID0gMjtcclxuICAgICAgdmFyIGVsZW1lbnRzUGVyQ29sdW1uID0gTWF0aC5jZWlsKGlucHV0cy5sZW5ndGggLyBjb2xzKSArIDE7XHJcbiAgICAgIGZvciAodmFyIGNvbCA9IDA7IGNvbCA8IGNvbHM7IGNvbCsrKSB7XHJcbiAgICAgICAgdmFyIGRpdiA9ICQoJzxkaXYgY2xhc3M9XCJjb2wtbWQtM1wiPjwvZGl2PicpO1xyXG4gICAgICAgICQuZWFjaChpbnB1dHMsXHJcbiAgICAgICAgICAoaSwgdikgPT4ge1xyXG4gICAgICAgICAgICBpZiAoY29sID09PSAwICYmIChpID49IGVsZW1lbnRzUGVyQ29sdW1uKSkgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgIGlmIChjb2wgPT09IDEgJiYgKGkgPCBlbGVtZW50c1BlckNvbHVtbiB8fCBpID49IGVsZW1lbnRzUGVyQ29sdW1uICogMikpIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICBkaXYuYXBwZW5kKFxyXG4gICAgICAgICAgICAgIGA8ZGl2IGNsYXNzPVwiY2hlY2tib3hcIj48bGFiZWw+PGlucHV0IHR5cGU9J2NoZWNrYm94JyBuYW1lPSdidXNpbmVzc093bmVyJyBpZD0nJHt2LmlkfScgdmFsdWU9JyR7XHJcbiAgICAgICAgICAgICAga28udG9KU09OKHYpXHJcbiAgICAgICAgICAgICAgfScgZGF0YS1iaW5kPSdjbGljazogZnVuY3Rpb24gKGRhdGEsIGV2ZW50KSB7IGxpc3RDcml0ZXJpYVZpZXdNb2RlbC50b2dnbGUoZXZlbnQpOyByZXR1cm4gdHJ1ZTsgfScgLz4mbmJzcDske1xyXG4gICAgICAgICAgICAgIHYubGFiZWx9PC9sYWJlbD48L2Rpdj5gKTtcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgICQoc2VsZWN0b3IpLmFwcGVuZChkaXYpO1xyXG4gICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxuICAgIGluaXRpYWxpemVBZ2VSYW5nZU1hbGVTZWN0aW9uKHNlbGVjdG9yKSB7XHJcblxyXG4gICAgICBjb25zdCBpbnB1dHMgPSB0aGlzLmdldEFnZVJhbmdlc01hbGUoKTtcclxuXHJcbiAgICAgIC8vIGNhbiBiZSBlbmNhcHN1bGF0ZWQgaW4gYSBjb21tb24gZnVudGlvblxyXG4gICAgICB2YXIgZGl2ID0gJChzZWxlY3Rvcik7XHJcbiAgICAgICQuZWFjaChpbnB1dHMsXHJcbiAgICAgICAgKGksIHYpID0+IHtcclxuICAgICAgICAgIGRpdi5hcHBlbmQoXHJcbiAgICAgICAgICAgIGA8bGFiZWwgY2xhc3M9XCJjaGVja2JveC1pbmxpbmVcIj48aW5wdXQgdHlwZT0nY2hlY2tib3gnIG5hbWU9J2FnZVJhbmdlc01hbGUnIGlkPScke3YuaWR9JyB2YWx1ZT0nJHtcclxuICAgICAgICAgICAga28udG9KU09OKHYpXHJcbiAgICAgICAgICAgIH0nIGRhdGEtYmluZD0nY2xpY2s6IGZ1bmN0aW9uIChkYXRhLCBldmVudCkgeyBsaXN0Q3JpdGVyaWFWaWV3TW9kZWwudG9nZ2xlKGV2ZW50KTsgcmV0dXJuIHRydWU7IH0nIC8+Jm5ic3A7JHtcclxuICAgICAgICAgICAgdi5sYWJlbH08L2xhYmVsPmApO1xyXG4gICAgICAgICAgJChzZWxlY3RvcikuYXBwZW5kKGRpdik7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgaW5pdGlhbGl6ZUFnZVJhbmdlRmVtYWxlU2VjdGlvbihzZWxlY3Rvcikge1xyXG5cclxuICAgICAgY29uc3QgaW5wdXRzID0gdGhpcy5nZXRBZ2VSYW5nZXNGZW1hbGUoKTtcclxuXHJcbiAgICAgIC8vIGNhbiBiZSBlbmNhcHN1bGF0ZWQgaW4gYSBjb21tb24gZnVudGlvblxyXG4gICAgICB2YXIgZGl2ID0gJChzZWxlY3Rvcik7XHJcbiAgICAgICQuZWFjaChpbnB1dHMsXHJcbiAgICAgICAgKGksIHYpID0+IHtcclxuICAgICAgICAgIGRpdi5hcHBlbmQoXHJcbiAgICAgICAgICAgIGA8bGFiZWwgY2xhc3M9XCJjaGVja2JveC1pbmxpbmVcIj48aW5wdXQgdHlwZT0nY2hlY2tib3gnIG5hbWU9J2FnZVJhbmdlc0ZlbWFsZScgaWQ9JyR7di5pZH0nIHZhbHVlPScke1xyXG4gICAgICAgICAgICBrby50b0pTT04odilcclxuICAgICAgICAgICAgfScgZGF0YS1iaW5kPSdjbGljazogZnVuY3Rpb24gKGRhdGEsIGV2ZW50KSB7IGxpc3RDcml0ZXJpYVZpZXdNb2RlbC50b2dnbGUoZXZlbnQpOyByZXR1cm4gdHJ1ZTsgfScgLz4mbmJzcDske1xyXG4gICAgICAgICAgICB2LmxhYmVsfTwvbGFiZWw+YCk7XHJcbiAgICAgICAgICAkKHNlbGVjdG9yKS5hcHBlbmQoZGl2KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBMT09LVVBTXHJcblxyXG4gICAgZ2V0RG9uYXRlc1RvKCk6IExpc3RCdWlsZGVyLlZhbHVlTGFiZWxbXSB7XHJcbiAgICAgIHJldHVybiBbXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJkb25hdGlvbnNDb250cmlidXRpb25zXCIsIFwiQ29udHJpYnV0aW9uc1wiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcImRvbmF0aW9uc01haWxPcmRlclwiLCBcIk1haWwgT3JkZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJkb25hdGVzdG9DaGFyaXRhYmxlQ2F1c2VzXCIsIFwiQ2hhcml0YWJsZSBDYXVzZXNcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJkb25hdGVzdG9BbmltYWxXZWxmYXJlXCIsIFwiQW5pbWFsIFdlbGZhcmVcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJkb25hdGVzdG9BcnRzQ3VsdHVyYWxcIiwgXCJBcnRzIEN1bHR1cmFsXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiZG9uYXRlc3RvQ2hpbGRyZW5zXCIsIFwiQ2hpbGRyZW5zXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiZG9uYXRlc3RvRW52aXJvbm1lbnRXaWxkbGlmZVwiLCBcIkVudmlyb25tZW50IFdpbGRsaWZlXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiZG9uYXRlc3RvSGVhbHRoXCIsIFwiSGVhbHRoXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiZG9uYXRlc3RvSW50ZXJuYXRpb25hbEFpZFwiLCBcIkludGVybmF0aW9uYWxBaWRcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJkb25hdGVzdG9Qb2xpdGljYWxcIiwgXCJQb2xpdGljYWxcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJkb25hdGVzdG9Qb2xpdGljYWxDb25zZXJ2YXRpdmVcIiwgXCJQb2xpdGljYWwgQ29uc2VydmF0aXZlXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiZG9uYXRlc3RvUG9saXRpY2FsTGliZXJhbFwiLCBcIlBvbGl0aWNhbCBMaWJlcmFsXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiZG9uYXRlc3RvUmVsaWdpb3VzXCIsIFwiUmVsaWdpb3VzXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiZG9uYXRlc3RvVmV0ZXJhbnNcIiwgXCJWZXRlcmFuc1wiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcImRvbmF0ZXN0b090aGVyXCIsIFwiT3RoZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJkb25hdGVzdG9Db21tdW5pdHlDaGFyaXRpZXNcIiwgXCJDb21tdW5pdHkgQ2hhcml0aWVzXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiZG9uYXRlc3RvUG9saXRpY3NcIiwgXCJQb2xpdGljc1wiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcImRvbmF0ZXN0b0NvbW11bml0eUludm9sdmVtZW50XCIsIFwiQ29tbXVuaXR5IEludm9sdmVtZW50XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiZG9uYXRlc3RvRW52aXJvbm1lbnRhbElzc3Vlc1wiLCBcIkVudmlyb25tZW50YWwgSXNzdWVzXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiZG9uYXRlc3RvUG9saXRpY2FsQ2hhcml0eVwiLCBcIlBvbGl0aWNhbCBDaGFyaXR5XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiZG9uYXRlc3RvQ29tbXVuaXR5Q2hhcml0eVwiLCBcIkNvbW11bml0eSBDaGFyaXR5XCIpXHJcbiAgICAgIF07XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0T2NjdXBhdGlvbigpOiBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsW10ge1xyXG4gICAgICByZXR1cm4gW1xyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiQVwiLCBcIlByb2Zlc3Npb25hbCAvIFRlY2huaWNhbFwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkJcIiwgXCJBZG1pbmlzdHJhdGlvbiAvIE1hbmFnZXJpYWxcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJDXCIsIFwiU2FsZXMgLyBTZXJ2aWNlXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiRFwiLCBcIkNsZXJpY2FsIC8gV2hpdGUgQ29sbGFyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiRVwiLCBcIkNyYWZ0c21hbiAvIEJsdWUgQ29sbGFyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiRlwiLCBcIlN0dWRlbnRcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJHXCIsIFwiSG9tZW1ha2VyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSFwiLCBcIlJldGlyZWRcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJJXCIsIFwiRmFybWVyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSlwiLCBcIk1pbGl0YXJ5XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiS1wiLCBcIlJlbGlnaW91c1wiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkxcIiwgXCJTZWxmIEVtcGxveWVkXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTVwiLCBcIlNlbGYgRW1wbG95ZWQgLSBQcm9mZXNzaW9uYWwgLyBUZWNobmljYWxcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJOXCIsIFwiU2VsZiBFbXBsb3llZCAtIEFkbWluaXN0cmF0aW9uIC8gTWFuYWdlcmlhbFwiKSxcclxuICAgICAgICAvLyBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIk9cIiwgXCJTZWxmIEVtcGxveWVkIC0gU2FsZXMgLyBTZXJ2aWNlXCIpLCAvLyBubyBtYXRjaGluZyB2YWx1ZXMgaW4gZGF0YWJhc2VcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlBcIiwgXCJTZWxmIEVtcGxveWVkIC0gQ2xlcmljYWwgLyBXaGl0ZSBDb2xsYXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJRXCIsIFwiU2VsZiBFbXBsb3llZCAtIENyYWZ0c21hbiAvIEJsdWUgQ29sbGFyXCIpLFxyXG4gICAgICAgIC8vbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJSXCIsIFwiU2VsZiBFbXBsb3llZCAtIFN0dWRlbnRcIiksIC8vIG5vIG1hdGNoaW5nIHZhbHVlcyBpbiBkYXRhYmFzZVxyXG4gICAgICAgIC8vbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJTXCIsIFwiU2VsZiBFbXBsb3llZCAtIEhvbWVtYWtlclwiKSwgLy8gbm8gbWF0Y2hpbmcgdmFsdWVzIGluIGRhdGFiYXNlXHJcbiAgICAgICAgLy9uZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlRcIiwgXCJTZWxmIEVtcGxveWVkIC0gUmV0aXJlZFwiKSwgLy8gbm8gbWF0Y2hpbmcgdmFsdWVzIGluIGRhdGFiYXNlXHJcbiAgICAgICAgLy9uZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlVcIiwgXCJTZWxmIEVtcGxveWVkIC0gT3RoZXJcIiksIC8vIG5vIG1hdGNoaW5nIHZhbHVlcyBpbiBkYXRhYmFzZVxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVlwiLCBcIkVkdWNhdG9yXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiV1wiLCBcIkZpbmFuY2lhbCBQcm9mZXNzaW9uYWxcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJYXCIsIFwiTGVnYWwgUHJvZmVzc2lvbmFsXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiWVwiLCBcIk1lZGljYWwgUHJvZmVzc2lvbmFsXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiWlwiLCBcIk90aGVyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiXCIsIFwiVW5rbm93blwiKVxyXG4gICAgICBdO1xyXG4gICAgfVxyXG5cclxuICAgIGdldE9jY3VwYXRpb25EZXRhaWxlZCgpOiBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsW10ge1xyXG4gICAgICByZXR1cm4gW1xyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVDk5OVwiLCBcIlByb2Zlc3Npb25hbFwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlQ5OThcIiwgXCJBcmNoaXRlY3RcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJUOTk3XCIsIFwiQ2hlbWlzdFwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlQ5OTZcIiwgXCJDdXJhdG9yXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVDk5NVwiLCBcIkVuZ2luZWVyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVDk5NFwiLCBcIkVuZ2luZWVyL0Flcm9zcGFjZVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlQ5OTNcIiwgXCJFbmdpbmVlci9DaGVtaWNhbFwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlQ5OTJcIiwgXCJFbmdpbmVlci9DaXZpbFwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlQ5OTFcIiwgXCJFbmdpbmVlci9FbGVjdHJpY2FsL0VsZWN0cm9uaWNcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJUOTkwXCIsIFwiRW5naW5lZXIvRmllbGRcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJUOTg5XCIsIFwiRW5naW5lZXIvSW5kdXN0cmlhbFwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlQ5ODhcIiwgXCJFbmdpbmVlci9NZWNoYW5pY2FsXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVDk4N1wiLCBcIkdlb2xvZ2lzdFwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlQ5ODZcIiwgXCJIb21lIEVjb25vbWlzdFwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlQ5ODVcIiwgXCJMZWdhbC9BdHRvcm5leS9MYXd5ZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJUOTg0XCIsIFwiTGlicmFyaWFuL0FyY2hpdmlzdFwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlQ5ODNcIiwgXCJNZWRpY2FsIERvY3Rvci9QaHlzaWNpYW5cIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJUOTgyXCIsIFwiUGFzdG9yXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVDk4MVwiLCBcIlBpbG90XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVDk4MFwiLCBcIlNjaWVudGlzdFwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlQ5NzlcIiwgXCJTdGF0aXN0aWNpYW4vQWN0dWFyeVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlQ5NzhcIiwgXCJWZXRlcmluYXJpYW5cIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJUODk5XCIsIFwiQ29tcHV0ZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJUODk4XCIsIFwiQ29tcHV0ZXIgT3BlcmF0b3JcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJUODk3XCIsIFwiQ29tcHV0ZXIgUHJvZ3JhbW1lclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlQ4OTZcIiwgXCJDb21wdXRlci9TeXN0ZW1zIEFuYWx5c3RcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJFNzk5XCIsIFwiRXhlY3V0aXZlL1VwcGVyIE1hbmFnZW1lbnRcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJFNzk4XCIsIFwiQ0VPL0NGTy9DaGFpcm1hbi9Db3JwIE9mZmljZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJFNzk3XCIsIFwiQ29tcHRyb2xsZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJFNzk2XCIsIFwiUG9saXRpY2lhbi9MZWdpc2xhdG9yL0RpcGxvbWF0XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiRTc5NVwiLCBcIlByZXNpZGVudFwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkU3OTRcIiwgXCJUcmVhc3VyZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJFNzkzXCIsIFwiVmljZSBQcmVzaWRlbnRcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJNNjk5XCIsIFwiTWlkZGxlIE1hbmFnZW1lbnRcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJNNjk4XCIsIFwiQWNjb3VudCBFeGVjdXRpdmVcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJNNjk3XCIsIFwiRGlyZWN0b3IvQXJ0IERpcmVjdG9yXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTTY5NlwiLCBcIkRpcmVjdG9yL0V4ZWN1dGl2ZSBEaXJlY3RvclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIk02OTVcIiwgXCJFZGl0b3JcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJNNjk0XCIsIFwiTWFuYWdlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIk02OTNcIiwgXCJNYW5hZ2VyL0Fzc2lzdGFudCBNYW5hZ2VyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTTY5MlwiLCBcIk1hbmFnZXIvQnJhbmNoIE1hbmFnZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJNNjkxXCIsIFwiTWFuYWdlci9DcmVkaXQgTWFuYWdlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIk02OTBcIiwgXCJNYW5hZ2VyL0Rpc3RyaWN0IE1hbmFnZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJNNjg5XCIsIFwiTWFuYWdlci9EaXZpc2lvbiBNYW5hZ2VyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTTY4OFwiLCBcIk1hbmdlci9HZW5lcmFsIE1hbmFnZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJNNjg3XCIsIFwiTWFuYWdlci9NYXJrZXRpbmcgTWFuYWdlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIk02ODZcIiwgXCJNYW5hZ2VyL09mZmljZSBNYW5hZ2VyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTTY4NVwiLCBcIk1hbmFnZXIvUGxhbnQgTWFuYWdlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIk02ODRcIiwgXCJNYW5hZ2VyL1Byb2R1Y3QgTWFuYWdlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIk02ODNcIiwgXCJNYW5hZ2VyL1Byb2plY3QgTWFuYWdlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIk02ODJcIiwgXCJNYW5hZ2VyL1Byb3BlcnR5IE1hbmFnZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJNNjgxXCIsIFwiTWFuYWdlci9SZWdpb25hbCBNYW5hZ2VyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTTY4MFwiLCBcIk1hbmFnZXIvU2FsZXMgTWFuYWdlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIk02NzlcIiwgXCJNYW5hZ2VyL1N0b3JlIE1hbmFnZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJNNjc4XCIsIFwiTWFuYWdlci9UcmFmZmljIE1hbmFnZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJNNjc3XCIsIFwiTWFuYWdlci9XYXJlaG91c2UgTWFuYWdlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIk02NzZcIiwgXCJQbGFubmVyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTTY3NVwiLCBcIlByaW5jaXBhbC9EZWFuL0VkdWNhdG9yXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTTY3NFwiLCBcIlN1cGVyaW50ZW5kZW50XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTTY3M1wiLCBcIlN1cGVydmlzb3JcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJXNTk5XCIsIFwiV2hpdGUgQ29sbGFyIFdvcmtlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlc1OThcIiwgXCJBY2NvdW50aW5nL0JpbGxlci9CaWxsaW5nIGNsZXJrXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVzU5N1wiLCBcIkFjdG9yL0VudGVydGFpbmVyL0Fubm91bmNlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlc1OTZcIiwgXCJBZGp1c3RlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlc1OTVcIiwgXCJBZG1pbmlzdHJhdGlvbi9NYW5hZ2VtZW50XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVzU5NFwiLCBcIkFkdmVydGlzaW5nXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVzU5M1wiLCBcIkFnZW50XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVzU5MlwiLCBcIkFpZGUvQXNzaXN0YW50XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVzU5MVwiLCBcIkFpZGUvQXNzaXN0YW50L0V4ZWN1dGl2ZVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlc1OTBcIiwgXCJBaWRlL0Fzc2lzdGFudC9PZmZpY2VcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJXNTg5XCIsIFwiQWlkZS9Bc3Npc3RhbnQvU2Nob29sXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVzU4OFwiLCBcIkFpZGUvQXNzaXN0YW50L1N0YWZmXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVzU4N1wiLCBcIkFpZGUvQXNzaXN0YW50L1RlY2huaWNhbFwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlc1ODZcIiwgXCJBbmFseXN0XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVzU4NVwiLCBcIkFwcHJhaXNlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlc1ODRcIiwgXCJBcnRpc3RcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJXNTgzXCIsIFwiQXVjdGlvbmVlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlc1ODJcIiwgXCJBdWRpdG9yXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVzU4MVwiLCBcIkJhbmtlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlc1ODBcIiwgXCJCYW5rZXIvTG9hbiBPZmZpY2VcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJXNTc5XCIsIFwiQmFua2VyL0xvYW4gUHJvY2Vzc29yXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVzU3OFwiLCBcIkJvb2trZWVwZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJXNTc3XCIsIFwiQnJva2VyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVzU3NlwiLCBcIkJyb2tlci9TdG9jay9UcmFkZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJXNTc1XCIsIFwiQnV5ZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJXNTc0XCIsIFwiQ2FzaGllclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlc1NzNcIiwgXCJDYXRlcmVyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVzU3MlwiLCBcIkNoZWNrZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJXNTcxXCIsIFwiQ2xhaW1zIEV4YW1pbmVyL1JlcC9BZGp1ZGljYXRvclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlc1NzBcIiwgXCJDbGVya1wiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlc1NjlcIiwgXCJDbGVyay9GaWxlXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVzU2OFwiLCBcIkNvbGxlY3RvclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlc1NjdcIiwgXCJDb21tdW5pY2F0aW9uc1wiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlc1NjZcIiwgXCJDb25zZXJ2YXRpb24vRW52aXJvbm1lbnRcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJXNTY1XCIsIFwiQ29uc3VsdGFudC9BZHZpc29yXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVzU2NFwiLCBcIkNvb3JkaW5hdG9yXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVzU2M1wiLCBcIkN1c3RvbWVyIFNlcnZpY2UvUmVwcmVzZW50YXRpdmVcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJXNTYyXCIsIFwiRGVzaWduZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJXNTYxXCIsIFwiRGV0ZWN0aXZlL0ludmVzdGlnYXRvclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlc1NjBcIiwgXCJEaXNwYXRjaGVyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVzU1OVwiLCBcIkRyYWZ0c21hblwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlc1NThcIiwgXCJFc3RpbWF0b3JcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJXNTU3XCIsIFwiRXhwZWRpdG9yXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVzU1NlwiLCBcIkZpbmFuY2VcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJXNTU1XCIsIFwiRmxpZ2h0IEF0dGVuZGFudC9TdGV3YXJkXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVzU1NFwiLCBcIkZsb3Jpc3RcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJXNTUzXCIsIFwiR3JhcGhpYyBEZXNpZ25lci9Db21tZXJjaWFsIEFydGlzdFwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlc1NTJcIiwgXCJIb3N0ZXNzL0hvc3QvVXNoZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJXNTUxXCIsIFwiSW5zdXJhbmNlL0FnZW50XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVzU1MFwiLCBcIkluc3VyYW5jZS9VbmRlcndyaXRlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlc1NDlcIiwgXCJJbnRlcmlvciBEZXNpZ25lclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlc1NDhcIiwgXCJKZXdlbGVyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVzU0N1wiLCBcIk1hcmtldGluZ1wiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlc1NDZcIiwgXCJNZXJjaGFuZGlzZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJXNTQ1XCIsIFwiTW9kZWxcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJXNTQ0XCIsIFwiTXVzaWNpYW4vTXVzaWMvRGFuY2VcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJXNTQzXCIsIFwiUGVyc29ubmVsL1JlY3J1aXRlci9JbnRlcnZpZXdlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlc1NDJcIiwgXCJQaG90b2dyYXBoeVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlc1NDFcIiwgXCJQdWJsaWMgUmVsYXRpb25zXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVzU0MFwiLCBcIlB1Ymxpc2hpbmdcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJXNTM5XCIsIFwiUHVyY2hhc2luZ1wiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlc1MzhcIiwgXCJRdWFsaXR5IENvbnRyb2xcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJXNTM3XCIsIFwiUmVhbCBFc3RhdGUvUmVhbHRvclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlc1MzZcIiwgXCJSZWNlcHRpb25pc3RcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJXNTM1XCIsIFwiUmVwb3J0ZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJXNTM0XCIsIFwiUmVzZWFyY2hlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlc1MzNcIiwgXCJTYWxlc1wiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlc1MzJcIiwgXCJTYWxlcyBDbGVyay9Db3VudGVybWFuXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVzUzMVwiLCBcIlNlY3VyaXR5XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVzUzMFwiLCBcIlN1cnZleW9yXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVzUyOVwiLCBcIlRlY2huaWNpYW5cIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJXNTI4XCIsIFwiVGVsZW1hcmtldGVyL1RlbGVwaG9uZS9PcGVyYXRvclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlc1MjdcIiwgXCJUZWxsZXIvQmFuayBUZWxsZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJXNTI2XCIsIFwiVGVzdGVyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVzUyNVwiLCBcIlRyYW5zY3JpcHRlci9UcmFuc2xhdG9yXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVzUyNFwiLCBcIlRyYXZlbCBBZ2VudFwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlc1MjNcIiwgXCJVbmlvbiBNZW1iZXIvUmVwLlwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlc1MjJcIiwgXCJXYXJkIENsZXJrXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiVzUyMVwiLCBcIldhdGVyIFRyZWF0bWVudFwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlc1MjBcIiwgXCJXcml0ZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDk5XCIsIFwiQmx1ZSBDb2xsYXIgV29ya2VyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQ5OFwiLCBcIkFuaW1hbCBUZWNobmljaWFuL0dyb29tZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDk3XCIsIFwiQXBwcmVudGljZVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkw0OTZcIiwgXCJBc3NlbWJsZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDk1XCIsIFwiQXRobGV0ZS9Qcm9mZXNzaW9uYWxcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDk0XCIsIFwiQXR0ZW5kYW50XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQ5M1wiLCBcIkF1dG8gTWVjaGFuaWNcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDkyXCIsIFwiQmFrZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDkxXCIsIFwiQmFyYmVyL0hhaXJzdHlsaXN0L0JlYXV0aWNpYW5cIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDkwXCIsIFwiQmFydGVuZGVyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQ4OVwiLCBcIkJpbmRlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkw0ODhcIiwgXCJCb2R5bWFuXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQ4N1wiLCBcIkJyYWtlbWFuXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQ4NlwiLCBcIkJyZXdlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkw0ODVcIiwgXCJCdXRjaGVyL01lYXQgQ3V0dGVyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQ4NFwiLCBcIkNhcnBlbnRlci9GdXJuaXR1cmUvV29vZHdvcmtpbmdcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDgzXCIsIFwiQ2hlZi9CdXRsZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDgyXCIsIFwiQ2hpbGQgQ2FyZS9EYXkgQ2FyZS9CYWJ5c2l0dGVyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQ4MVwiLCBcIkNsZWFuZXIvTGF1bmRyeVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkw0ODBcIiwgXCJDbGVyay9EZWxpXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQ3OVwiLCBcIkNsZXJrL1Byb2R1Y2VcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDc4XCIsIFwiQ2xlcmsvU3RvY2tcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDc3XCIsIFwiQ29uZHVjdG9yXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQ3NlwiLCBcIkNvbnN0cnVjdGlvblwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkw0NzVcIiwgXCJDb29rXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQ3NFwiLCBcIkNvc21ldG9sb2dpc3RcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDczXCIsIFwiQ291cmllci9EZWxpdmVyeS9NZXNzZW5nZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDcyXCIsIFwiQ3Jld21hblwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkw0NzFcIiwgXCJDdXN0b2RpYW5cIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDcwXCIsIFwiQ3V0dGVyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQ2OVwiLCBcIkRvY2sgV29ya2VyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQ2OFwiLCBcIkRyaXZlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkw0NjdcIiwgXCJEcml2ZXIvQnVzIERyaXZlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkw0NjZcIiwgXCJEcml2ZXIvVHJ1Y2sgRHJpdmVyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQ2NVwiLCBcIkVsZWN0cmljaWFuXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQ2NFwiLCBcIkZhYnJpY2F0b3JcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDYzXCIsIFwiRmFjdG9yeSBXb3JrbWFuXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQ2MlwiLCBcIkZhcm1lci9EYWlyeW1hblwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkw0NjFcIiwgXCJGaW5pc2hlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkw0NjBcIiwgXCJGaXNoZXJtYW4vU2VhbWFuXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQ1OVwiLCBcIkZpdHRlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkw0NThcIiwgXCJGb29kIFNlcnZpY2VcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDU3XCIsIFwiRm9yZW1hbi9DcmV3IGxlYWRlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkw0NTZcIiwgXCJGb3JlbWFuL1Nob3AgRm9yZW1hblwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkw0NTVcIiwgXCJGb3Jlc3RyeVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkw0NTRcIiwgXCJGb3VuZHJ5IFdvcmtlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkw0NTNcIiwgXCJGdXJyaWVyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQ1MlwiLCBcIkdhcmRlbmVyL0xhbmRzY2FwZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDUxXCIsIFwiR2xhemllclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkw0NTBcIiwgXCJHcmluZGVyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQ0OVwiLCBcIkdyb2NlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkw0NDhcIiwgXCJIZWxwZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDQ3XCIsIFwiSG91c2VrZWVwZXIvTWFpZFwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkw0NDZcIiwgXCJJbnNwZWN0b3JcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDQ1XCIsIFwiSW5zdGFsbGVyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQ0NFwiLCBcIklyb253b3JrZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDQzXCIsIFwiSmFuaXRvclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkw0NDJcIiwgXCJKb3VybmV5bWFuXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQ0MVwiLCBcIkxhYm9yZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDQwXCIsIFwiTGluZW1hblwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkw0MzlcIiwgXCJMaXRob2dyYXBoZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDM4XCIsIFwiTG9hZGVyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQzN1wiLCBcIkxvY2tzbWl0aFwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkw0MzZcIiwgXCJNYWNoaW5pc3RcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDM1XCIsIFwiTWFpbnRlbmFuY2VcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDM0XCIsIFwiTWFpbnRlbmFuY2UvU3VwZXJ2aXNvclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkw0MzNcIiwgXCJNYXNvbi9Ccmljay9FdGMuXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQzMlwiLCBcIk1hdGVyaWFsIEhhbmRsZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDMxXCIsIFwiTWVjaGFuaWNcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDMwXCIsIFwiTWV0ZXIgUmVhZGVyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQyOVwiLCBcIk1pbGwgd29ya2VyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQyOFwiLCBcIk1pbGx3cmlnaHRcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDI3XCIsIFwiTWluZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDI2XCIsIFwiTW9sZCBNYWtlci9Nb2xkZXIvSW5qZWN0aW9uIE1vbGRcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDI1XCIsIFwiT2lsIEluZHVzdHJ5L0RyaWxsZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDI0XCIsIFwiT3BlcmF0b3JcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDIzXCIsIFwiT3BlcmF0b3IvQm9pbGVybWFrZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDIyXCIsIFwiT3BlcmF0b3IvQ3JhbmUgT3BlcmF0b3JcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDIxXCIsIFwiT3BlcmF0b3IvRm9ya2xpZnQgT3BlcmF0b3JcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDIwXCIsIFwiT3BlcmF0b3IvTWFjaGluZSBPcGVyYXRvclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkw0MTlcIiwgXCJQYWNrZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDE4XCIsIFwiUGFpbnRlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkw0MTdcIiwgXCJQYXJ0cyAoQXV0byBFdGMuKVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkw0MTZcIiwgXCJQaXBlIGZpdHRlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkw0MTVcIiwgXCJQbHVtYmVyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQxNFwiLCBcIlBvbGlzaGVyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQxM1wiLCBcIlBvcnRlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkw0MTJcIiwgXCJQcmVzcyBPcGVyYXRvclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkw0MTFcIiwgXCJQcmVzc2VyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQxMFwiLCBcIlByaW50ZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDA5XCIsIFwiUHJvZHVjdGlvblwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkw0MDhcIiwgXCJSZXBhaXJtYW5cIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDA3XCIsIFwiUm9vZmVyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQwNlwiLCBcIlNhbml0YXRpb24vRXh0ZXJtaW5hdG9yXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQwNVwiLCBcIlNlYW1zdHJlc3MvVGFpbG9yL0hhbmRpY3JhZnRcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDA0XCIsIFwiU2V0dXAgbWFuXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQwM1wiLCBcIlNoZWV0IE1ldGFsIFdvcmtlci9TdGVlbCBXb3JrZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDAyXCIsIFwiU2hpcHBpbmcvSW1wb3J0L0V4cG9ydC9DdXN0b21cIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMNDAxXCIsIFwiU29ydGVyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDQwMFwiLCBcIlRvb2xtYWtlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkwzOTlcIiwgXCJUcmFuc3BvcnRhdGlvblwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkwzOThcIiwgXCJUeXBlc2V0dGVyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTDM5N1wiLCBcIlVwaG9sc3RlcnlcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMMzk2XCIsIFwiVXRpbGl0eVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkwzOTVcIiwgXCJXYWl0ZXIvV2FpdHJlc3NcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJMMzk0XCIsIFwiV2VsZGVyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSDM0OVwiLCBcIkhlYWx0aCBTZXJ2aWNlc1wiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkgzNDhcIiwgXCJDaGlyb3ByYWN0b3JcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJIMzQ3XCIsIFwiRGVudGFsIEFzc2lzdGFudFwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkgzNDZcIiwgXCJEZW50YWwgSHlnaWVuaXN0XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSDM0NVwiLCBcIkRlbnRpc3RcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJIMzQ0XCIsIFwiRGlldGljaWFuXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSDM0M1wiLCBcIkhlYWx0aCBDYXJlXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSDM0MlwiLCBcIk1lZGljYWwgQXNzaXN0YW50XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSDM0MVwiLCBcIk1lZGljYWwgU2VjcmV0YXJ5XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSDM0MFwiLCBcIk1lZGljYWwgVGVjaG5pY2lhblwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkgzMzlcIiwgXCJNZWRpY2FsL1BhcmFtZWRpY1wiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkgzMzhcIiwgXCJOdXJzZXMgQWlkZS9PcmRlcmx5XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSDMzN1wiLCBcIk9wdGljaWFuXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSDMzNlwiLCBcIk9wdG9tZXRyaXN0XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSDMzNVwiLCBcIlBoYXJtYWNpc3QvUGhhcm1hY3lcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJIMzM0XCIsIFwiUHN5Y2hvbG9naXN0XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSDMzM1wiLCBcIlRlY2huaWNpYW4vTGFiXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSDMzMlwiLCBcIlRlY2huaWNpYW4vWC1yYXlcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJIMzMxXCIsIFwiVGhlcmFwaXN0XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSDMzMFwiLCBcIlRoZXJhcGlzdHMvUGh5c2ljYWxcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJIMzI5XCIsIFwiTnVyc2VcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJIMzI4XCIsIFwiTnVyc2UgKFJlZ2lzdGVyZWQpXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSDMyN1wiLCBcIk51cnNlL0xQTlwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkgzMjZcIiwgXCJTb2NpYWwgV29ya2VyL0Nhc2UgV29ya2VyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiUzI5OVwiLCBcIkxlZ2FsL1BhcmFsZWdhbC9Bc3Npc3RhbnRcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJTMjk4XCIsIFwiTGVnYWwgU2VjcmV0YXJ5XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiUzI5N1wiLCBcIlNlY3JldGFyeVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlMyOTZcIiwgXCJUeXBpc3RcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJTMjk1XCIsIFwiRGF0YSBFbnRyeS9LZXkgUHVuY2hcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJQMjQ5XCIsIFwiSG9tZW1ha2VyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiUDI0OFwiLCBcIlJldGlyZWRcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJQMjQ3XCIsIFwiUmV0aXJlZC9QZW5zaW9uZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJQMjQ2XCIsIFwiUGFydCBUaW1lXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiUDI0NVwiLCBcIlN0dWRlbnRcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJQMjQ0XCIsIFwiVm9sdW50ZWVyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiQTE5OVwiLCBcIkFybWVkIEZvcmNlc1wiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkExOThcIiwgXCJBcm15IENyZWRpdCBVbmlvbiBUcmFkZXNcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJBMTk3XCIsIFwiTmF2eSBDcmVkaXQgVW5pb24gVHJhZGVzXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiQTE5NlwiLCBcIkFpciBGb3JjZVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkExOTVcIiwgXCJOYXRpb25hbCBHdWFyZFwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkExOTRcIiwgXCJDb2FzdCBHdWFyZFwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkExOTNcIiwgXCJNYXJpbmVzXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSTE0OVwiLCBcIkNvYWNoXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSTE0OFwiLCBcIkNvdW5zZWxvclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkkxNDdcIiwgXCJJbnN0cnVjdG9yXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSTE0NlwiLCBcIkxlY3R1cmVyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSTE0NVwiLCBcIlByb2Zlc3NvclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkkxNDRcIiwgXCJUZWFjaGVyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSTE0M1wiLCBcIlRyYWluZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJDMTI5XCIsIFwiQ2l2aWwgU2VydmljZVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkMxMjhcIiwgXCJBaXIgVHJhZmZpYyBDb250cm9sXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiQzEyN1wiLCBcIkNpdmlsIFNlcnZpY2UvR292ZXJubWVudFwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkMxMjZcIiwgXCJDb3JyZWN0aW9ucy9Qcm9iYXRpb24vUGFyb2xlXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiQzEyNVwiLCBcIkNvdXJ0IFJlcG9ydGVyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiQzEyNFwiLCBcIkZpcmVmaWdodGVyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiQzEyM1wiLCBcIkp1ZGdlL1JlZmVyZWVcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJDMTIyXCIsIFwiTWFpbCBDYXJyaWVyL1Bvc3RhbFwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkMxMjFcIiwgXCJNYWlsL1Bvc3RtYXN0ZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJDMTIwXCIsIFwiUG9saWNlL1Ryb29wZXJcIiksXHJcbiAgICAgIF07XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0RWR1Y2F0aW9uKCk6IExpc3RCdWlsZGVyLlZhbHVlTGFiZWxbXSB7XHJcbiAgICAgIHJldHVybiBbXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJBXCIsIFwiQ29tcGxldGVkIEhpZ2ggU2Nob29sXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiQlwiLCBcIkNvbXBsZXRlZCBDb2xsZWdlXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiQ1wiLCBcIkNvbXBsZXRlZCBHcmFkdWF0ZSBTY2hvb2xcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJEXCIsIFwiQXR0ZW5kZWQgVm9jYXRpb25hbC9UZWNobmljYWxcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJcIiwgXCJVbmtub3duXCIpXHJcbiAgICAgIF07XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0RXN0SW5jb21lKCk6IExpc3RCdWlsZGVyLlZhbHVlTGFiZWxbXSB7XHJcbiAgICAgIHJldHVybiBbXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJBXCIsIFwiVW5kZXIgJDEwLDAwMFwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkJcIiwgXCIkMTAsMDAwIC0gJDE0LDk5OVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkNcIiwgXCIkMTUsMDAwIC0gJDE5LDk5OVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkRcIiwgXCIkMjAsMDAwIC0gJDI0LDk5OVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkVcIiwgXCIkMjUsMDAwIC0gJDI5LDk5OVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkZcIiwgXCIkMzAsMDAwIC0gJDM0LDk5OVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkdcIiwgXCIkMzUsMDAwIC0gJDM5LDk5OVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkhcIiwgXCIkNDAsMDAwIC0gJDQ0LDk5OVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIklcIiwgXCIkNDUsMDAwIC0gJDQ5LDk5OVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkpcIiwgXCIkNTAsMDAwIC0gJDU0LDk5OVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIktcIiwgXCIkNTUsMDAwIC0gJDU5LDk5OVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkxcIiwgXCIkNjAsMDAwIC0gJDY0LDk5OVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIk1cIiwgXCIkNjUsMDAwIC0gJDc0LDk5OVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIk5cIiwgXCIkNzUsMDAwIC0gJDk5LDk5OVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIk9cIiwgXCIkMTAwLDAwMCAtICQxNDksOTk5XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiUFwiLCBcIiQxNTAsMDAwIC0gJDE3NCw5OTlcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJRXCIsIFwiJDE3NSwwMDAgLSAkMTk5LDk5OVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlJcIiwgXCIkMjAwLDAwMCAtICQyNDksOTk5XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiU1wiLCBcIiQyNTAsMDAwICtcIilcclxuICAgICAgXTtcclxuICAgIH1cclxuXHJcbiAgICBnZXROZXRXb3J0aCgpOiBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsW10ge1xyXG4gICAgICByZXR1cm4gW1xyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiQVwiLCBcIkxlc3MgdGhhbiAkMVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkJcIiwgXCIkMSAtICQ0LDk5OVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkNcIiwgXCIkNSwwMDAgLSAkOSw5OTlcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJEXCIsIFwiJDEwLDAwMCAtICQyNCw5OTlcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJFXCIsIFwiJDI1LDAwMCAtICQ0OSw5OTlcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJGXCIsIFwiJDUwLDAwMCAtICQ5OSw5OTlcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJHXCIsIFwiJDEwMCwwMDAgLSAkMjQ5LDk5OVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkhcIiwgXCIkMjUwLDAwMCAtICQ0OTksOTk5XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSVwiLCBcIkdyZWF0ZXIgdGhhbiAkNDk5LDk5OVwiKVxyXG4gICAgICBdO1xyXG4gICAgfVxyXG5cclxuICAgIGdldEhvbWVWYWx1ZSgpOiBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsW10ge1xyXG4gICAgICByZXR1cm4gW1xyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiQVwiLCBcIiQxLDAwMCAtICQyNCw5OTlcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJCXCIsIFwiJDI1LDAwMCAtICQ0OSw5OTlcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJDXCIsIFwiJDUwLDAwMCAtICQ3NCw5OTlcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJEXCIsIFwiJDc1LDAwMCAtICQ5OSw5OTlcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJFXCIsIFwiJDEwMCwwMDAgLSAkMTI0LDk5OVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkZcIiwgXCIkMTI1LDAwMCAtICQxNDksOTk5XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiR1wiLCBcIiQxNTAsMDAwIC0gJDE3NCw5OTlcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJIXCIsIFwiJDE3NSwwMDAgLSAkMTk5LDk5OVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIklcIiwgXCIkMjAwLDAwMCAtICQyMjQsOTk5XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSlwiLCBcIiQyMjUsMDAwIC0gJDI0OSw5OTlcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJLXCIsIFwiJDI1MCwwMDAgLSAkMjc0LDk5OVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkxcIiwgXCIkMjc1LDAwMCAtICQyOTksOTk5XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiTVwiLCBcIiQzMDAsMDAwIC0gJDM0OSw5OTlcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJOXCIsIFwiJDM1MCwwMDAgLSAkMzk5LDk5OVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIk9cIiwgXCIkNDAwLDAwMCAtICQ0NDksOTk5XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiUFwiLCBcIiQ0NTAsMDAwIC0gJDQ5OSw5OTlcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJRXCIsIFwiJDUwMCwwMDAgLSAkNzQ5LDk5OVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlJcIiwgXCIkNzUwLDAwMCAtICQ5OTksOTk5XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiU1wiLCBcIiQxLDAwMCwwMDAgUGx1c1wiKVxyXG4gICAgICBdO1xyXG4gICAgfVxyXG5cclxuICAgIGdldEhvbWVvd25lcigpOiBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsW10ge1xyXG4gICAgICByZXR1cm4gW1xyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSFwiLCBcIkhvbWVvd25lclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIlJcIiwgXCJSZW50ZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJcIiwgXCJVbmtub3duXCIpXHJcbiAgICAgIF07XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0TGVuZ3RoT2ZSZXNpZGVuY2UoKTogTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbFtdIHtcclxuICAgICAgcmV0dXJuIFtcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIjFcIiwgXCIxIFllYXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCIyXCIsIFwiMiBZZWFyc1wiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIjNcIiwgXCIzIFllYXJzXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiNFwiLCBcIjQgWWVhcnNcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCI1XCIsIFwiNSBZZWFyc1wiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIjZcIiwgXCI2IFllYXJzXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiN1wiLCBcIjcgWWVhcnNcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCI4XCIsIFwiOCBZZWFyc1wiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIjlcIiwgXCI5IFllYXJzXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiMTBcIiwgXCIxMCBZZWFyc1wiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIjExXCIsIFwiMTEgWWVhcnNcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCIxMlwiLCBcIjEyIFllYXJzXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiMTNcIiwgXCIxMyBZZWFyc1wiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIjE0XCIsIFwiMTQgWWVhcnNcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCIxNVwiLCBcIjE1IFllYXJzXCIpXHJcbiAgICAgIF07XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0SG91c2Vob2xkU2l6ZSgpOiBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsW10ge1xyXG4gICAgICByZXR1cm4gW1xyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiMVwiLCBcIjEgcGVvcGxlXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiMlwiLCBcIjIgcGVvcGxlXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiM1wiLCBcIjMgcGVvcGxlXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiNFwiLCBcIjQgcGVvcGxlXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiNVwiLCBcIjUgcGVvcGxlXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiNlwiLCBcIjYgcGVvcGxlXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiN1wiLCBcIjcgcGVvcGxlXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiOFwiLCBcIjggcGVvcGxlXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiOVwiLCBcIjkgcGVvcGxlXCIpXHJcbiAgICAgIF07XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0TnVtYmVyT2ZBZHVsdHMoKTogTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbFtdIHtcclxuICAgICAgcmV0dXJuIFtcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIjFcIiwgXCIxIGFkdWx0XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiMlwiLCBcIjIgYWR1bHRzXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiM1wiLCBcIjMgYWR1bHRzXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiNFwiLCBcIjQgYWR1bHRzXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiNVwiLCBcIjUgYWR1bHRzXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiNlwiLCBcIjYgYWR1bHRzXCIpXHJcbiAgICAgIF07XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0SW52ZXN0bWVudHMoKTogTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbFtdIHtcclxuICAgICAgcmV0dXJuIFtcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcImludmVzdG1lbnRzQWN0aXZlXCIsIFwiQWN0aXZlIEludmVzdG1lbnRzXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiaW52ZXN0bWVudHNGb3JlaWduXCIsIFwiRm9yZWlnbiBJbnZlc3RtZW50c1wiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcImludmVzdGluZ0FjdGl2ZVwiLCBcIkFjdGl2ZSBJbnZlc3RvclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcImludmVzdG1lbnRzUGVyc29uYWxcIiwgXCJQZXJzb25hbCBJbnZlc3RvclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcImludmVzdG1lbnRzUmVhbEVzdGF0ZVwiLCBcIlJlYWwgRXN0YXRlIEludmVzdG9yXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiaW52ZXN0bWVudHNTdG9ja3NCb25kc1wiLCBcIlN0b2NrcyBCb25kcyBJbnZlc3RvclwiKVxyXG4gICAgICBdO1xyXG4gICAgfVxyXG5cclxuICAgIGdldEJ1c2luZXNzT3duZXIoKTogTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbFtdIHtcclxuICAgICAgcmV0dXJuIFtcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIjFcIiwgXCJBY2NvdW50YW50XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiMlwiLCBcIkJ1aWxkZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCIzXCIsIFwiQ29udHJhY3RvclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIjRcIiwgXCJEZWFsZXIvUmV0YWlsZXIvU3RvcmVrZWVwZXJcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCI1XCIsIFwiRGlzdHJpYnV0b3IvV2hvbGVzYWxlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIjZcIiwgXCJGdW5lcmFsIERpcmVjdG9yXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiN1wiLCBcIk1ha2VyL01hbnVmYWN0dXJlclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIjhcIiwgXCJPd25lclwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIjlcIiwgXCJQYXJ0bmVyXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiQVwiLCBcIlNlbGYtRW1wbG95ZWRcIilcclxuICAgICAgXTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRFc3RpbWF0ZWRSZXNpZGVudGlhbFByb3BlcnRpZXNPd25lZCgpIHtcclxuICAgICAgcmV0dXJuIFtcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIjBcIiwgXCIwXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiMVwiLCBcIjFcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCIyXCIsIFwiMlwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIjNcIiwgXCIzXCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiNFwiLCBcIjRcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCI1XCIsIFwiNVwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIjVcIiwgXCI2XCIpXHJcbiAgICAgIF07XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0dEVzdGltYXRlZFJlc2lkZW50aWFsUHJvcGVydGllc093bmVkKCk6IExpc3RCdWlsZGVyLlZhbHVlTGFiZWxbXSB7XHJcbiAgICAgIHJldHVybiBbXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJpbnZlc3RtZW50RXN0aW1hdGVkUmVzaWRlbnRpYWxQcm9wZXJ0aWVzT3duZWRcIixcclxuICAgICAgICAgIFwiRXN0aW1hdGVkIFJlc2lkZW50aWFsIFByb3BlcnRpZXMgT3duZWRcIilcclxuICAgICAgXTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRBZ2VSYW5nZXNNYWxlKCk6IExpc3RCdWlsZGVyLlZhbHVlTGFiZWxbXSB7XHJcbiAgICAgIHJldHVybiBbXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJIb3VzZUhvbGRIYXNNYWxlczE4dG8yNFwiLCBcIjE4LTI0XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSG91c2VIb2xkSGFzTWFsZXMyNXRvMzRcIiwgXCIyNS0zNFwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkhvdXNlSG9sZEhhc01hbGVzMzV0bzQ0XCIsIFwiMzUtNDRcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJIb3VzZUhvbGRIYXNNYWxlczQ1dG81NFwiLCBcIjQ1LTU0XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSG91c2VIb2xkSGFzTWFsZXM1NXRvNjRcIiwgXCI1NS02NFwiKSxcclxuICAgICAgICBuZXcgTGlzdEJ1aWxkZXIuVmFsdWVMYWJlbChcIkhvdXNlSG9sZEhhc01hbGVzNjV0bzc0XCIsIFwiNjUtNzRcIiksXHJcbiAgICAgICAgbmV3IExpc3RCdWlsZGVyLlZhbHVlTGFiZWwoXCJIb3VzZUhvbGRIYXNNYWxlczc1cGx1c1wiLCBcIjc1K1wiKVxyXG4gICAgICBdO1xyXG4gICAgfVxyXG5cclxuICAgIGdldEFnZVJhbmdlc0ZlbWFsZSgpOiBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsW10ge1xyXG4gICAgICByZXR1cm4gW1xyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSG91c2VIb2xkSGFzRmVtYWxlczE4dG8yNFwiLCBcIjE4LTI0XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSG91c2VIb2xkSGFzRmVtYWxlczI1dG8zNFwiLCBcIjI1LTM0XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSG91c2VIb2xkSGFzRmVtYWxlczM1dG80NFwiLCBcIjM1LTQ0XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSG91c2VIb2xkSGFzRmVtYWxlczQ1dG81NFwiLCBcIjQ1LTU0XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSG91c2VIb2xkSGFzRmVtYWxlczU1dG82NFwiLCBcIjU1LTY0XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSG91c2VIb2xkSGFzRmVtYWxlczY1dG83NFwiLCBcIjY1LTc0XCIpLFxyXG4gICAgICAgIG5ldyBMaXN0QnVpbGRlci5WYWx1ZUxhYmVsKFwiSG91c2VIb2xkSGFzRmVtYWxlczc1cGx1c1wiLCBcIjc1K1wiKVxyXG4gICAgICBdO1xyXG4gICAgfVxyXG5cclxuICB9XHJcblxyXG59Il19